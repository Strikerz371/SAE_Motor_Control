

HI-TECH Software LITE Macro Assembler (PIC18) V9.63PL3 build 4692 
                                                       Sat Oct 06 14:28:01 2018

HI-TECH Software Omniscient Code Generator build 4692
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 4692"
     2                           
     3                           	processor	18F4620
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	3
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	0
   109  000000                     main@i	equ	??_main+0
   110                           	global	main@i
   111  000000                     LCD_Out@i	equ	??_LCD_Out+0
   112                           	global	LCD_Out@i
   113  000000                     LCD_Out@A	equ	??_LCD_Out+1
   114                           	global	LCD_Out@A
   115  000000                     LCD_Out@DATA	equ	?_LCD_Out+0
   116                           	global	LCD_Out@DATA
   117  000000                     LCD_Out@N	equ	?_LCD_Out+2
   118                           	global	LCD_Out@N
   119  000000                     LCD_Move@Row	equ	?_LCD_Move+0
   120                           	global	LCD_Move@Row
   121  000000                     LCD_Move@Col	equ	?_LCD_Move+1
   122                           	global	LCD_Move@Col
   123  000000                     LCD_Write@c	equ	?_LCD_Write+0
   124                           	global	LCD_Write@c
   125  000000                     ___lwdiv@counter	equ	??___lwdiv+0
   126                           	global	___lwdiv@counter
   127  000000                     ___lwdiv@quotient	equ	??___lwdiv+1
   128                           	global	___lwdiv@quotient
   129  000000                     ___lwdiv@dividend	equ	?___lwdiv+0
   130                           	global	___lwdiv@dividend
   131  000000                     ___lwdiv@divisor	equ	?___lwdiv+2
   132                           	global	___lwdiv@divisor
   133  000000                     ___lwmod@counter	equ	??___lwmod+0
   134                           	global	___lwmod@counter
   135  000000                     ___lwmod@dividend	equ	?___lwmod+0
   136                           	global	___lwmod@dividend
   137  000000                     ___lwmod@divisor	equ	?___lwmod+2
   138                           	global	___lwmod@divisor
   139  000000                     LCD_Inst@c	equ	?_LCD_Inst+0
   140                           	global	LCD_Inst@c
   141  000000                     Wait_ms@i	equ	??_Wait_ms+0
   142                           	global	Wait_ms@i
   143  000000                     Wait_ms@j	equ	??_Wait_ms+2
   144                           	global	Wait_ms@j
   145  000000                     Wait_ms@X	equ	?_Wait_ms+0
   146                           	global	Wait_ms@X
   147  000000                     LCD_Pause@x	equ	??_LCD_Pause+0
   148                           	global	LCD_Pause@x
   149                           ;Data sizes: Strings 0, constant 140, data 0, bs
                                 s 0, persistent 0 stack 34
   150                           	global	_main
   151                           	global	??_main
   152                           	global	?_main
   153                                   psect   text0,class=CODE,space=0,reloc=2
   154                           
   155                           	opt lm
   156                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\DriveSignal.c"
   157                           	line	82
   158  000000                     	__size_of_main	equ	__end_of_main-_main
   159                           ;DriveSignal.c: 81: main(void)
   160                           ;DriveSignal.c: 82: {
   161                           	
   162  00108E                     _main:		; BSR set to: ?
   163                           
   164                           	opt stack 30
   165                           	line	83
   166  00108E  ECE0  F009         	call	_init	;wreg free
   167                           	line	85
   168                           ;DriveSignal.c: 85: while(1){
   169                           	
   170  001092                     l115:		; BSR set to: ?
   171                           
   172                           	line	86
   173                           ;DriveSignal.c: 86: RC1=!RC1;
   174  001092  7282               	btg	c:(31761/8),(31761)&7	;volatile
   175                           	line	87
   176                           ;DriveSignal.c: 87: unsigned char i =0;
   177  001094  0101               	movlb	1	; () banked
   178  001096  6F01               	movwf	(??_main+1+0)&0ffh
   179  001098  0E00               	movlw	low(0)
   180  00109A  0101               	movlb	1	; () banked
   181  00109C  0101               	movlb	1	; () banked
   182  00109E  6F00               	movwf	((main@i))&0ffh
   183  0010A0  0101               	movlb	1	; () banked
   184  0010A2  5101               	movf	(??_main+1+0)&0ffh,w
   185                           	line	90
   186                           ;DriveSignal.c: 90: LCD_Move(0,0);
   187  0010A4  0101               	movlb	1	; () banked
   188  0010A6  6F01               	movwf	(??_main+1+0)&0ffh
   189  0010A8  0E00               	movlw	low(0)
   190  0010AA  0101               	movlb	1	; () banked
   191  0010AC  0101               	movlb	1	; () banked
   192  0010AE  6F06               	movwf	(0+(?_LCD_Move+01h))&0ffh
   193  0010B0  0101               	movlb	1	; () banked
   194  0010B2  5101               	movf	(??_main+1+0)&0ffh,w
   195  0010B4  0101               	movlb	1	; () banked
   196  0010B6  6F02               	movwf	(??_main+2+0)&0ffh
   197  0010B8  0E00               	movlw	low(0)
   198  0010BA  0101               	movlb	1	; () banked
   199  0010BC  0101               	movlb	1	; () banked
   200  0010BE  6F05               	movwf	((?_LCD_Move))&0ffh
   201  0010C0  0101               	movlb	1	; () banked
   202  0010C2  5102               	movf	(??_main+2+0)&0ffh,w
   203  0010C4  ECD1  F00A         	call	_LCD_Move	;wreg free
   204                           	line	91
   205                           ;DriveSignal.c: 91: A2D = A2D_Read();
   206  0010C8  ECF2  F00B         	call	_A2D_Read	;wreg free
   207  0010CC  C103  F00B         	movff	0+?_A2D_Read,(c:11)
   208  0010D0  C104  F00C         	movff	1+?_A2D_Read,(c:11+1)
   209                           	line	92
   210                           ;DriveSignal.c: 92: LCD_Out(A2D, 0);
   211  0010D4  0101               	movlb	1	; () banked
   212  0010D6  6F01               	movwf	(??_main+1+0)&0ffh
   213  0010D8  0E00               	movlw	low(0)
   214  0010DA  0101               	movlb	1	; () banked
   215  0010DC  0101               	movlb	1	; () banked
   216  0010DE  6F05               	movwf	(0+(?_LCD_Out+02h))&0ffh
   217  0010E0  0101               	movlb	1	; () banked
   218  0010E2  5101               	movf	(??_main+1+0)&0ffh,w
   219  0010E4  C00B F103          	movff	(c:11),(?_LCD_Out)
   220  0010E8  C00C F104          	movff	(c:11+1),(?_LCD_Out+1)
   221  0010EC  ECFD  F008         	call	_LCD_Out	;wreg free
   222                           	line	95
   223                           ;DriveSignal.c: 95: if(RB0 == 1)
   224  0010F0  A081               	btfss	c:(31752/8),(31752)&7	;volatile
   225  0010F2  D001               	goto	u1671
   226  0010F4  D001               	goto	u1670
   227  0010F6                     u1671:
   228  0010F6  D03D               	goto	l117
   229  0010F8                     u1670:
   230                           	line	97
   231                           ;DriveSignal.c: 96: {
   232                           ;DriveSignal.c: 97: LCD_Move(0,0);
   233  0010F8  0101               	movlb	1	; () banked
   234  0010FA  6F01               	movwf	(??_main+1+0)&0ffh
   235  0010FC  0E00               	movlw	low(0)
   236  0010FE  0101               	movlb	1	; () banked
   237  001100  0101               	movlb	1	; () banked
   238  001102  6F06               	movwf	(0+(?_LCD_Move+01h))&0ffh
   239  001104  0101               	movlb	1	; () banked
   240  001106  5101               	movf	(??_main+1+0)&0ffh,w
   241  001108  0101               	movlb	1	; () banked
   242  00110A  6F02               	movwf	(??_main+2+0)&0ffh
   243  00110C  0E00               	movlw	low(0)
   244  00110E  0101               	movlb	1	; () banked
   245  001110  0101               	movlb	1	; () banked
   246  001112  6F05               	movwf	((?_LCD_Move))&0ffh
   247  001114  0101               	movlb	1	; () banked
   248  001116  5102               	movf	(??_main+2+0)&0ffh,w
   249  001118  ECD1  F00A         	call	_LCD_Move	;wreg free
   250                           	line	98
   251                           ;DriveSignal.c: 98: for (i=0; i<20; i++){
   252  00111C  0101               	movlb	1	; () banked
   253  00111E  6F01               	movwf	(??_main+1+0)&0ffh
   254  001120  0E00               	movlw	low(0)
   255  001122  0101               	movlb	1	; () banked
   256  001124  0101               	movlb	1	; () banked
   257  001126  6F00               	movwf	((main@i))&0ffh
   258  001128  0101               	movlb	1	; () banked
   259  00112A  5101               	movf	(??_main+1+0)&0ffh,w
   260  00112C  0E13               	movlw	(014h-1)
   261  00112E  0101               	movlb	1	; () banked
   262  001130  0101               	movlb	1	; () banked
   263  001132  6500               	cpfsgt	((main@i))&0ffh
   264  001134  D001               	goto	u1681
   265  001136  D001               	goto	u1680
   266  001138                     u1681:
   267  001138  D001               	goto	l118
   268  00113A                     u1680:
   269  00113A  D01B               	goto	l117
   270                           	
   271  00113C                     l118:		; BSR set to: ?
   272                           
   273                           	line	99
   274                           ;DriveSignal.c: 99: LCD_Write(MSG1[i]);
   275  00113C  0E01               	movlw	low((_MSG1))
   276  00113E  0101               	movlb	1	; () banked
   277  001140  0101               	movlb	1	; () banked
   278  001142  2500               	addwf	((main@i))&0ffh,w
   279  001144  6EF6               	movwf	tblptrl
   280  001146  6AF7               	clrf	tblptrh
   281  001148  0E10               	movlw	high((_MSG1))
   282  00114A  22F7               	addwfc	tblptrh
   283  00114C  6AF8               	clrf	tblptru
   284  00114E  0E00               	movlw	low highword(__mediumconst)
   285  001150  22F8               	addwfc	tblptru
   286  001152  0008               	tblrd	*
   287                           	
   288  001154  0101               	movlb	1	; () banked
   289  001156  CFF5 F10D          	movff	tablat,(?_LCD_Write)
   290  00115A  ECB9  F00B         	call	_LCD_Write	;wreg free
   291                           	line	98
   292  00115E  0101               	movlb	1	; () banked
   293  001160  0101               	movlb	1	; () banked
   294  001162  2B00               	incf	((main@i))&0ffh
   295  001164  0E13               	movlw	(014h-1)
   296  001166  0101               	movlb	1	; () banked
   297  001168  0101               	movlb	1	; () banked
   298  00116A  6500               	cpfsgt	((main@i))&0ffh
   299  00116C  D001               	goto	u1691
   300  00116E  D001               	goto	u1690
   301  001170                     u1691:
   302  001170  D7E5               	goto	l118
   303  001172                     u1690:
   304                           	
   305  001172                     l119:		; BSR set to: ?
   306                           
   307                           	line	101
   308                           	
   309  001172                     l117:		; BSR set to: ?
   310                           
   311                           	line	102
   312                           ;DriveSignal.c: 100: }
   313                           ;DriveSignal.c: 101: }
   314                           ;DriveSignal.c: 102: if(RB1 == 1){
   315  001172  A281               	btfss	c:(31753/8),(31753)&7	;volatile
   316  001174  D001               	goto	u1701
   317  001176  D001               	goto	u1700
   318  001178                     u1701:
   319  001178  D03D               	goto	l114
   320  00117A                     u1700:
   321                           	line	103
   322                           ;DriveSignal.c: 103: LCD_Move(0,0);
   323  00117A  0101               	movlb	1	; () banked
   324  00117C  6F01               	movwf	(??_main+1+0)&0ffh
   325  00117E  0E00               	movlw	low(0)
   326  001180  0101               	movlb	1	; () banked
   327  001182  0101               	movlb	1	; () banked
   328  001184  6F06               	movwf	(0+(?_LCD_Move+01h))&0ffh
   329  001186  0101               	movlb	1	; () banked
   330  001188  5101               	movf	(??_main+1+0)&0ffh,w
   331  00118A  0101               	movlb	1	; () banked
   332  00118C  6F02               	movwf	(??_main+2+0)&0ffh
   333  00118E  0E00               	movlw	low(0)
   334  001190  0101               	movlb	1	; () banked
   335  001192  0101               	movlb	1	; () banked
   336  001194  6F05               	movwf	((?_LCD_Move))&0ffh
   337  001196  0101               	movlb	1	; () banked
   338  001198  5102               	movf	(??_main+2+0)&0ffh,w
   339  00119A  ECD1  F00A         	call	_LCD_Move	;wreg free
   340                           	line	104
   341                           ;DriveSignal.c: 104: for (i=0; i<20; i++){
   342  00119E  0101               	movlb	1	; () banked
   343  0011A0  6F01               	movwf	(??_main+1+0)&0ffh
   344  0011A2  0E00               	movlw	low(0)
   345  0011A4  0101               	movlb	1	; () banked
   346  0011A6  0101               	movlb	1	; () banked
   347  0011A8  6F00               	movwf	((main@i))&0ffh
   348  0011AA  0101               	movlb	1	; () banked
   349  0011AC  5101               	movf	(??_main+1+0)&0ffh,w
   350  0011AE  0E13               	movlw	(014h-1)
   351  0011B0  0101               	movlb	1	; () banked
   352  0011B2  0101               	movlb	1	; () banked
   353  0011B4  6500               	cpfsgt	((main@i))&0ffh
   354  0011B6  D001               	goto	u1711
   355  0011B8  D001               	goto	u1710
   356  0011BA                     u1711:
   357  0011BA  D001               	goto	l122
   358  0011BC                     u1710:
   359  0011BC  D01B               	goto	l114
   360                           	
   361  0011BE                     l122:		; BSR set to: ?
   362                           
   363                           	line	105
   364                           ;DriveSignal.c: 105: LCD_Write(MSG2[i]);
   365  0011BE  0E15               	movlw	low((_MSG2))
   366  0011C0  0101               	movlb	1	; () banked
   367  0011C2  0101               	movlb	1	; () banked
   368  0011C4  2500               	addwf	((main@i))&0ffh,w
   369  0011C6  6EF6               	movwf	tblptrl
   370  0011C8  6AF7               	clrf	tblptrh
   371  0011CA  0E10               	movlw	high((_MSG2))
   372  0011CC  22F7               	addwfc	tblptrh
   373  0011CE  6AF8               	clrf	tblptru
   374  0011D0  0E00               	movlw	low highword(__mediumconst)
   375  0011D2  22F8               	addwfc	tblptru
   376  0011D4  0008               	tblrd	*
   377                           	
   378  0011D6  0101               	movlb	1	; () banked
   379  0011D8  CFF5 F10D          	movff	tablat,(?_LCD_Write)
   380  0011DC  ECB9  F00B         	call	_LCD_Write	;wreg free
   381                           	line	104
   382  0011E0  0101               	movlb	1	; () banked
   383  0011E2  0101               	movlb	1	; () banked
   384  0011E4  2B00               	incf	((main@i))&0ffh
   385  0011E6  0E13               	movlw	(014h-1)
   386  0011E8  0101               	movlb	1	; () banked
   387  0011EA  0101               	movlb	1	; () banked
   388  0011EC  6500               	cpfsgt	((main@i))&0ffh
   389  0011EE  D001               	goto	u1721
   390  0011F0  D001               	goto	u1720
   391  0011F2                     u1721:
   392  0011F2  D7E5               	goto	l122
   393  0011F4                     u1720:
   394                           	
   395  0011F4                     l123:		; BSR set to: ?
   396                           
   397                           	line	107
   398                           	
   399  0011F4                     l121:		; BSR set to: ?
   400                           
   401                           	line	111
   402                           	
   403  0011F4                     l114:		; BSR set to: ?
   404                           
   405                           	line	85
   406  0011F4  D74E               	goto	l115
   407                           	global	start
   408  0011F6  EF0C  F004         	goto	start
   409                           	opt stack 0
   410                           GLOBAL __end_of_main
   411  0011FA                     	__end_of_main:
   412                           	FNSIZE	_main,3,0
   413                           ; =============== function _main ends ==========
                                 ==
   414                           
   415                                   psect   text1,class=CODE,space=0,reloc=2
   416                           	line	112
   417                           
   418                           	opt lm
   419                           	signat	_main,90
   420                           	global	_LCD_Out
   421                           	global	??_LCD_Out
   422                           	global	?_LCD_Out
   423                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\LCD_PortD.C"
   424                           	line	88
   425  000000                     	__size_of_LCD_Out	equ	__end_of_LCD_Out-_LCD_Out
   426                           ;LCD_PortD.C: 87: void LCD_Out(unsigned int DATA
                                 , unsigned char N)
   427                           ;LCD_PortD.C: 88: {
   428                           	
   429  0011FA                     _LCD_Out:		; BSR set to: ?
   430                           
   431                           	opt stack 29
   432                           	line	91
   433  0011FA  0101               	movlb	1	; () banked
   434  0011FC  6F0C               	movwf	(??_LCD_Out+6+0)&0ffh
   435  0011FE  0E00               	movlw	low(0)
   436  001200  0101               	movlb	1	; () banked
   437  001202  0101               	movlb	1	; () banked
   438  001204  6F06               	movwf	((LCD_Out@i))&0ffh
   439  001206  0101               	movlb	1	; () banked
   440  001208  510C               	movf	(??_LCD_Out+6+0)&0ffh,w
   441  00120A  0E04               	movlw	(05h-1)
   442  00120C  0101               	movlb	1	; () banked
   443  00120E  0101               	movlb	1	; () banked
   444  001210  6506               	cpfsgt	((LCD_Out@i))&0ffh
   445  001212  D001               	goto	u1731
   446  001214  D001               	goto	u1730
   447  001216                     u1731:
   448  001216  D001               	goto	l254
   449  001218                     u1730:
   450  001218  D036               	goto	l255
   451                           	
   452  00121A                     l254:		; BSR set to: ?
   453                           
   454                           	line	92
   455                           ;LCD_PortD.C: 92: A[i] = DATA % 10;
   456  00121A  0101               	movlb	1	; () banked
   457  00121C  0E07               	movlw	low(LCD_Out@A)
   458  00121E  0101               	movlb	1	; () banked
   459  001220  0101               	movlb	1	; () banked
   460  001222  2506               	addwf	((LCD_Out@i))&0ffh,w
   461  001224  6EE9               	movwf	c:fsr0l
   462  001226  6AEA               	clrf	1+c:fsr0l
   463  001228  0101               	movlb	1	; () banked
   464  00122A  0E01               	movlw	high(LCD_Out@A)
   465  00122C  22EA               	addwfc	1+c:fsr0l
   466  00122E  0E0A               	movlw	low(0Ah)
   467  001230  0101               	movlb	1	; () banked
   468  001232  0101               	movlb	1	; () banked
   469  001234  6F0F               	movwf	(0+(?___lwmod+02h))&0ffh
   470  001236  0E00               	movlw	high(0Ah)
   471  001238  0101               	movlb	1	; () banked
   472  00123A  6F10               	movwf	(1+(?___lwmod+02h))&0ffh
   473  00123C  C103  F10D         	movff	(LCD_Out@DATA),(?___lwmod)
   474  001240  C104  F10E         	movff	(LCD_Out@DATA+1),(?___lwmod+1)
   475  001244  EC85  F00A         	call	___lwmod	;wreg free
   476  001248  0101               	movlb	1	; () banked
   477  00124A  0101               	movlb	1	; () banked
   478  00124C  510D               	movf	(0+?___lwmod)&0ffh,w
   479  00124E  6EEF               	movwf	indf0
   480                           
   481                           	line	93
   482                           ;LCD_PortD.C: 93: DATA = DATA / 10;
   483  001250  0E0A               	movlw	low(0Ah)
   484  001252  0101               	movlb	1	; () banked
   485  001254  0101               	movlb	1	; () banked
   486  001256  6F0F               	movwf	(0+(?___lwdiv+02h))&0ffh
   487  001258  0E00               	movlw	high(0Ah)
   488  00125A  0101               	movlb	1	; () banked
   489  00125C  6F10               	movwf	(1+(?___lwdiv+02h))&0ffh
   490  00125E  C103  F10D         	movff	(LCD_Out@DATA),(?___lwdiv)
   491  001262  C104  F10E         	movff	(LCD_Out@DATA+1),(?___lwdiv+1)
   492  001266  EC84  F009         	call	___lwdiv	;wreg free
   493  00126A  C10D  F103         	movff	0+?___lwdiv,(LCD_Out@DATA)
   494  00126E  C10E  F104         	movff	1+?___lwdiv,(LCD_Out@DATA+1)
   495                           	line	91
   496  001272  0101               	movlb	1	; () banked
   497  001274  0101               	movlb	1	; () banked
   498  001276  2B06               	incf	((LCD_Out@i))&0ffh
   499  001278  0E04               	movlw	(05h-1)
   500  00127A  0101               	movlb	1	; () banked
   501  00127C  0101               	movlb	1	; () banked
   502  00127E  6506               	cpfsgt	((LCD_Out@i))&0ffh
   503  001280  D001               	goto	u1741
   504  001282  D001               	goto	u1740
   505  001284                     u1741:
   506  001284  D7CA               	goto	l254
   507  001286                     u1740:
   508                           	
   509  001286                     l255:		; BSR set to: ?
   510                           
   511                           	line	95
   512                           ;LCD_PortD.C: 94: }
   513                           ;LCD_PortD.C: 95: for (i=5; i>0; i--) {
   514  001286  0101               	movlb	1	; () banked
   515  001288  6F0C               	movwf	(??_LCD_Out+6+0)&0ffh
   516  00128A  0E05               	movlw	low(05h)
   517  00128C  0101               	movlb	1	; () banked
   518  00128E  0101               	movlb	1	; () banked
   519  001290  6F06               	movwf	((LCD_Out@i))&0ffh
   520  001292  0101               	movlb	1	; () banked
   521  001294  510C               	movf	(??_LCD_Out+6+0)&0ffh,w
   522  001296  0101               	movlb	1	; () banked
   523  001298  0101               	movlb	1	; () banked
   524  00129A  6706               	tstfsz	((LCD_Out@i))&0ffh
   525  00129C  D001               	goto	u1751
   526  00129E  D001               	goto	u1750
   527  0012A0                     u1751:
   528  0012A0  D001               	goto	l257
   529  0012A2                     u1750:
   530  0012A2  D031               	goto	l258
   531                           	
   532  0012A4                     l257:		; BSR set to: ?
   533                           
   534                           	line	96
   535                           ;LCD_PortD.C: 96: if (i == N) LCD_Write('.');
   536  0012A4  0101               	movlb	1	; () banked
   537  0012A6  0101               	movlb	1	; () banked
   538  0012A8  5105               	movf	((LCD_Out@N))&0ffh,w
   539  0012AA  0101               	movlb	1	; () banked
   540  0012AC  0101               	movlb	1	; () banked
   541  0012AE  6306               	cpfseq	((LCD_Out@i))&0ffh
   542  0012B0  D001               	goto	u1761
   543  0012B2  D001               	goto	u1760
   544  0012B4                     u1761:
   545  0012B4  D00A               	goto	l260
   546  0012B6                     u1760:
   547  0012B6  0101               	movlb	1	; () banked
   548  0012B8  6F0C               	movwf	(??_LCD_Out+6+0)&0ffh
   549  0012BA  0E2E               	movlw	low(02Eh)
   550  0012BC  0101               	movlb	1	; () banked
   551  0012BE  0101               	movlb	1	; () banked
   552  0012C0  6F0D               	movwf	((?_LCD_Write))&0ffh
   553  0012C2  0101               	movlb	1	; () banked
   554  0012C4  510C               	movf	(??_LCD_Out+6+0)&0ffh,w
   555  0012C6  ECB9  F00B         	call	_LCD_Write	;wreg free
   556                           	
   557  0012CA                     l260:		; BSR set to: ?
   558                           
   559                           	line	97
   560                           ;LCD_PortD.C: 97: LCD_Write(A[i-1] + '0');
   561  0012CA  C106  F10C         	movff	(LCD_Out@i),??_LCD_Out+6+0
   562  0012CE  0EFF               	movlw	-1
   563  0012D0  0101               	movlb	1	; () banked
   564  0012D2  270C               	addwf	(??_LCD_Out+6+0)&0ffh
   565  0012D4  0101               	movlb	1	; () banked
   566  0012D6  0E07               	movlw	low(LCD_Out@A)
   567  0012D8  0101               	movlb	1	; () banked
   568  0012DA  250C               	addwf	(??_LCD_Out+6+0)&0ffh,w
   569  0012DC  6EE9               	movwf	c:fsr0l
   570  0012DE  6AEA               	clrf	1+c:fsr0l
   571  0012E0  0101               	movlb	1	; () banked
   572  0012E2  0E01               	movlw	high(LCD_Out@A)
   573  0012E4  22EA               	addwfc	1+c:fsr0l
   574  0012E6  50EF               	movf	indf0,w
   575  0012E8  0F30               	addlw	low(030h)
   576  0012EA  0101               	movlb	1	; () banked
   577  0012EC  0101               	movlb	1	; () banked
   578  0012EE  6F0D               	movwf	((?_LCD_Write))&0ffh
   579  0012F0  ECB9  F00B         	call	_LCD_Write	;wreg free
   580                           	line	95
   581  0012F4  0101               	movlb	1	; () banked
   582  0012F6  0101               	movlb	1	; () banked
   583  0012F8  0706               	decf	((LCD_Out@i))&0ffh
   584  0012FA  0101               	movlb	1	; () banked
   585  0012FC  0101               	movlb	1	; () banked
   586  0012FE  6706               	tstfsz	((LCD_Out@i))&0ffh
   587  001300  D001               	goto	u1771
   588  001302  D001               	goto	u1770
   589  001304                     u1771:
   590  001304  D7CF               	goto	l257
   591  001306                     u1770:
   592                           	
   593  001306                     l258:		; BSR set to: ?
   594                           
   595                           	line	99
   596                           ;LCD_PortD.C: 98: }
   597                           ;LCD_PortD.C: 99: }
   598  001306                     l253:
   599                           			; BSR set to: ?
   600                           
   601  001306  0012               	return
   602                           	opt stack 0
   603                           GLOBAL __end_of_LCD_Out
   604  001308                     	__end_of_LCD_Out:
   605                           	FNSIZE	_LCD_Out,7,3
   606                           ; =============== function _LCD_Out ends =======
                                 =====
   607                           
   608                           	signat	_LCD_Out,8312
   609                           	global	_A2D_Read
   610                           	global	??_A2D_Read
   611                           	global	?_A2D_Read
   612                                   psect   text2,class=CODE,space=0,reloc=2
   613                           
   614                           	opt lm
   615                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\PortConfig.c"
   616                           	line	27
   617  000000                     	__size_of_A2D_Read	equ	__end_of_A2D_Read-_A2D_R
                                 ead
   618                           ;PortConfig.c: 26: int A2D_Read(void)
   619                           ;PortConfig.c: 27: {
   620                           	
   621  0017E4                     _A2D_Read:		; BSR set to: ?
   622                           
   623                           	opt stack 29
   624                           	line	29
   625  0017E4  0E01               	movlw	low(01h)
   626  0017E6  6EC2               	movwf	((c:4034)),c	;volatile
   627                           	line	30
   628                           ;PortConfig.c: 30: GODONE = 1;
   629  0017E8  82C2               	bsf	c:(32273/8),(32273)&7	;volatile
   630                           	line	31
   631                           ;PortConfig.c: 31: while(GODONE);
   632  0017EA  D000               	goto	l372
   633                           	
   634  0017EC                     l372:		; BSR set to: ?
   635                           
   636  0017EC  B2C2               	btfsc	c:(32273/8),(32273)&7	;volatile
   637  0017EE  D001               	goto	u1911
   638  0017F0  D001               	goto	u1910
   639  0017F2                     u1911:
   640  0017F2  D7FC               	goto	l372
   641  0017F4                     u1910:
   642                           	
   643  0017F4                     l374:		; BSR set to: ?
   644                           
   645                           	line	32
   646  0017F4  CFC3 F103          	movff	(c:4035),(?_A2D_Read)	;volatile
   647  0017F8  CFC4 F104          	movff	(c:4035+1),(?_A2D_Read+1)	;volatile
   648  0017FC  D000               	goto	l371
   649                           	line	33
   650                           ;PortConfig.c: 33: }
   651  0017FE                     l371:
   652                           			; BSR set to: ?
   653                           
   654  0017FE  0012               	return
   655                           	opt stack 0
   656                           GLOBAL __end_of_A2D_Read
   657  001800                     	__end_of_A2D_Read:
   658                           	FNSIZE	_A2D_Read,0,2
   659                           ; =============== function _A2D_Read ends ======
                                 ======
   660                           
   661                           	signat	_A2D_Read,90
   662                           	global	_init
   663                           	global	??_init
   664                           	global	?_init
   665                                   psect   text3,class=CODE,space=0,reloc=2
   666                           
   667                           	opt lm
   668                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\DriveSignal.c"
   669                           	line	35
   670  000000                     	__size_of_init	equ	__end_of_init-_init
   671                           ;DriveSignal.c: 34: void init (void)
   672                           ;DriveSignal.c: 35: {
   673                           	
   674  0013C0                     _init:		; BSR set to: ?
   675                           
   676                           	opt stack 29
   677                           	line	37
   678  0013C0  EC13  F00B         	call	_LCD_Init	;wreg free
   679                           	line	43
   680                           ;DriveSignal.c: 43: T0CS = 0;
   681  0013C4  9AD5               	bcf	c:(32429/8),(32429)&7
   682                           	line	44
   683                           ;DriveSignal.c: 44: T0CON = 0x87;
   684  0013C6  0101               	movlb	1	; () banked
   685  0013C8  6F03               	movwf	(??_init+0+0)&0ffh
   686  0013CA  0E87               	movlw	low(087h)
   687  0013CC  6ED5               	movwf	((c:4053)),c
   688  0013CE  0101               	movlb	1	; () banked
   689  0013D0  5103               	movf	(??_init+0+0)&0ffh,w
   690                           	line	45
   691                           ;DriveSignal.c: 45: TMR0ON = 1;
   692  0013D2  8ED5               	bsf	c:(32431/8),(32431)&7
   693                           	line	46
   694                           ;DriveSignal.c: 46: TMR0IE = 1;
   695  0013D4  8AF2               	bsf	c:(32661/8),(32661)&7
   696                           	line	47
   697                           ;DriveSignal.c: 47: TMR0IP = 1;
   698  0013D6  84F1               	bsf	c:(32650/8),(32650)&7
   699                           	line	48
   700                           ;DriveSignal.c: 48: PEIE = 1;
   701  0013D8  8CF2               	bsf	c:(32662/8),(32662)&7
   702                           	line	52
   703                           ;DriveSignal.c: 52: T2CON = 0x4D;
   704  0013DA  0101               	movlb	1	; () banked
   705  0013DC  6F03               	movwf	(??_init+0+0)&0ffh
   706  0013DE  0E4D               	movlw	low(04Dh)
   707  0013E0  6ECA               	movwf	((c:4042)),c
   708  0013E2  0101               	movlb	1	; () banked
   709  0013E4  5103               	movf	(??_init+0+0)&0ffh,w
   710                           	line	53
   711                           ;DriveSignal.c: 53: PR2 = 249;
   712  0013E6  0101               	movlb	1	; () banked
   713  0013E8  6F03               	movwf	(??_init+0+0)&0ffh
   714  0013EA  0EF9               	movlw	low(0F9h)
   715  0013EC  6ECB               	movwf	((c:4043)),c
   716  0013EE  0101               	movlb	1	; () banked
   717  0013F0  5103               	movf	(??_init+0+0)&0ffh,w
   718                           	line	54
   719                           ;DriveSignal.c: 54: TMR2IE = 1;
   720  0013F2  829D               	bsf	c:(31977/8),(31977)&7
   721                           	line	55
   722                           ;DriveSignal.c: 55: PEIE = 1;
   723  0013F4  8CF2               	bsf	c:(32662/8),(32662)&7
   724                           	line	56
   725                           ;DriveSignal.c: 56: TMR2ON = 1;
   726  0013F6  84CA               	bsf	c:(32338/8),(32338)&7
   727                           	line	57
   728                           ;DriveSignal.c: 57: TMR2IP = 1;
   729  0013F8  829F               	bsf	c:(31993/8),(31993)&7
   730                           	line	60
   731                           ;DriveSignal.c: 60: GIE = 1;
   732  0013FA  8EF2               	bsf	c:(32663/8),(32663)&7
   733                           	line	61
   734                           ;DriveSignal.c: 61: RA3=1;
   735  0013FC  8680               	bsf	c:(31747/8),(31747)&7	;volatile
   736                           	line	65
   737                           ;DriveSignal.c: 65: LCD_Move(1,0);
   738  0013FE  0101               	movlb	1	; () banked
   739  001400  6F03               	movwf	(??_init+0+0)&0ffh
   740  001402  0E00               	movlw	low(0)
   741  001404  0101               	movlb	1	; () banked
   742  001406  0101               	movlb	1	; () banked
   743  001408  6F06               	movwf	(0+(?_LCD_Move+01h))&0ffh
   744  00140A  0101               	movlb	1	; () banked
   745  00140C  5103               	movf	(??_init+0+0)&0ffh,w
   746  00140E  0101               	movlb	1	; () banked
   747  001410  6F04               	movwf	(??_init+1+0)&0ffh
   748  001412  0E01               	movlw	low(01h)
   749  001414  0101               	movlb	1	; () banked
   750  001416  0101               	movlb	1	; () banked
   751  001418  6F05               	movwf	((?_LCD_Move))&0ffh
   752  00141A  0101               	movlb	1	; () banked
   753  00141C  5104               	movf	(??_init+1+0)&0ffh,w
   754  00141E  ECD1  F00A         	call	_LCD_Move	;wreg free
   755                           	line	66
   756                           ;DriveSignal.c: 66: for (i=0; i<20; i++)
   757  001422  0101               	movlb	1	; () banked
   758  001424  6F03               	movwf	(??_init+0+0)&0ffh
   759  001426  0E00               	movlw	low(0)
   760  001428  6E06               	movwf	((c:6)),c
   761  00142A  0101               	movlb	1	; () banked
   762  00142C  5103               	movf	(??_init+0+0)&0ffh,w
   763  00142E  0E13               	movlw	(014h-1)
   764  001430  6406               	cpfsgt	((c:6)),c
   765  001432  D001               	goto	u1651
   766  001434  D001               	goto	u1650
   767  001436                     u1651:
   768  001436  D001               	goto	l110
   769  001438                     u1650:
   770  001438  D015               	goto	l111
   771                           	line	67
   772                           	
   773  00143A                     l110:		; BSR set to: ?
   774                           
   775                           	line	68
   776                           ;DriveSignal.c: 67: {
   777                           ;DriveSignal.c: 68: LCD_Write(MSG7[i]);
   778  00143A  0E79               	movlw	low((_MSG7))
   779  00143C  2406               	addwf	((c:6)),c,w
   780  00143E  6EF6               	movwf	tblptrl
   781  001440  6AF7               	clrf	tblptrh
   782  001442  0E10               	movlw	high((_MSG7))
   783  001444  22F7               	addwfc	tblptrh
   784  001446  6AF8               	clrf	tblptru
   785  001448  0E00               	movlw	low highword(__mediumconst)
   786  00144A  22F8               	addwfc	tblptru
   787  00144C  0008               	tblrd	*
   788                           	
   789  00144E  0101               	movlb	1	; () banked
   790  001450  CFF5 F10D          	movff	tablat,(?_LCD_Write)
   791  001454  ECB9  F00B         	call	_LCD_Write	;wreg free
   792                           	line	66
   793  001458  2A06               	incf	((c:6)),c
   794  00145A  0E13               	movlw	(014h-1)
   795  00145C  6406               	cpfsgt	((c:6)),c
   796  00145E  D001               	goto	u1661
   797  001460  D001               	goto	u1660
   798  001462                     u1661:
   799  001462  D7EB               	goto	l110
   800  001464                     u1660:
   801                           	
   802  001464                     l111:		; BSR set to: ?
   803                           
   804                           	line	76
   805                           ;DriveSignal.c: 69: }
   806                           ;DriveSignal.c: 76: }
   807  001464                     l109:
   808                           			; BSR set to: ?
   809                           
   810  001464  0012               	return
   811                           	opt stack 0
   812                           GLOBAL __end_of_init
   813  001466                     	__end_of_init:
   814                           	FNSIZE	_init,2,0
   815                           ; =============== function _init ends ==========
                                 ==
   816                           
   817                           	signat	_init,88
   818                           	global	_LCD_Move
   819                           	global	??_LCD_Move
   820                           	global	?_LCD_Move
   821                                   psect   text4,class=CODE,space=0,reloc=2
   822                           
   823                           	opt lm
   824                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\LCD_PortD.C"
   825                           	line	57
   826  000000                     	__size_of_LCD_Move	equ	__end_of_LCD_Move-_LCD_M
                                 ove
   827                           ;LCD_PortD.C: 56: void LCD_Move(unsigned char Ro
                                 w, unsigned char Col)
   828                           ;LCD_PortD.C: 57: {
   829                           	
   830  0015A2                     _LCD_Move:		; BSR set to: ?
   831                           
   832                           	opt stack 28
   833                           	line	58
   834  0015A2  0101               	movlb	1	; () banked
   835  0015A4  0101               	movlb	1	; () banked
   836  0015A6  6705               	tstfsz	((LCD_Move@Row))&0ffh
   837  0015A8  D001               	goto	u1781
   838  0015AA  D001               	goto	u1780
   839  0015AC                     u1781:
   840  0015AC  D009               	goto	l247
   841  0015AE                     u1780:
   842  0015AE  0101               	movlb	1	; () banked
   843  0015B0  0101               	movlb	1	; () banked
   844  0015B2  5106               	movf	((LCD_Move@Col))&0ffh,w
   845  0015B4  0F80               	addlw	low(080h)
   846  0015B6  0101               	movlb	1	; () banked
   847  0015B8  0101               	movlb	1	; () banked
   848  0015BA  6F07               	movwf	((?_LCD_Inst))&0ffh
   849  0015BC  EC92  F00B         	call	_LCD_Inst	;wreg free
   850                           	
   851  0015C0                     l247:		; BSR set to: ?
   852                           
   853                           	line	59
   854                           ;LCD_PortD.C: 59: if (Row == 1) LCD_Inst(0xC0 + 
                                 Col);
   855  0015C0  0101               	movlb	1	; () banked
   856  0015C2  0101               	movlb	1	; () banked
   857  0015C4  0505               	decf	((LCD_Move@Row))&0ffh,w
   858                           
   859  0015C6  A4D8               	btfss	status,2
   860  0015C8  D001               	goto	u1791
   861  0015CA  D001               	goto	u1790
   862  0015CC                     u1791:
   863  0015CC  D009               	goto	l248
   864  0015CE                     u1790:
   865  0015CE  0101               	movlb	1	; () banked
   866  0015D0  0101               	movlb	1	; () banked
   867  0015D2  5106               	movf	((LCD_Move@Col))&0ffh,w
   868  0015D4  0FC0               	addlw	low(0C0h)
   869  0015D6  0101               	movlb	1	; () banked
   870  0015D8  0101               	movlb	1	; () banked
   871  0015DA  6F07               	movwf	((?_LCD_Inst))&0ffh
   872  0015DC  EC92  F00B         	call	_LCD_Inst	;wreg free
   873                           	
   874  0015E0                     l248:		; BSR set to: ?
   875                           
   876                           	line	60
   877                           ;LCD_PortD.C: 60: if (Row == 2) LCD_Inst(0x94 + 
                                 Col);
   878  0015E0  0101               	movlb	1	; () banked
   879  0015E2  0101               	movlb	1	; () banked
   880  0015E4  5105               	movf	((LCD_Move@Row))&0ffh,w
   881  0015E6  0A02               	xorlw	2
   882                           
   883  0015E8  A4D8               	btfss	status,2
   884  0015EA  D001               	goto	u1801
   885  0015EC  D001               	goto	u1800
   886  0015EE                     u1801:
   887  0015EE  D009               	goto	l249
   888  0015F0                     u1800:
   889  0015F0  0101               	movlb	1	; () banked
   890  0015F2  0101               	movlb	1	; () banked
   891  0015F4  5106               	movf	((LCD_Move@Col))&0ffh,w
   892  0015F6  0F94               	addlw	low(094h)
   893  0015F8  0101               	movlb	1	; () banked
   894  0015FA  0101               	movlb	1	; () banked
   895  0015FC  6F07               	movwf	((?_LCD_Inst))&0ffh
   896  0015FE  EC92  F00B         	call	_LCD_Inst	;wreg free
   897                           	
   898  001602                     l249:		; BSR set to: ?
   899                           
   900                           	line	61
   901                           ;LCD_PortD.C: 61: if (Row == 3) LCD_Inst(0xD4 + 
                                 Col);
   902  001602  0101               	movlb	1	; () banked
   903  001604  0101               	movlb	1	; () banked
   904  001606  5105               	movf	((LCD_Move@Row))&0ffh,w
   905  001608  0A03               	xorlw	3
   906                           
   907  00160A  A4D8               	btfss	status,2
   908  00160C  D001               	goto	u1811
   909  00160E  D001               	goto	u1810
   910  001610                     u1811:
   911  001610  D009               	goto	l250
   912  001612                     u1810:
   913  001612  0101               	movlb	1	; () banked
   914  001614  0101               	movlb	1	; () banked
   915  001616  5106               	movf	((LCD_Move@Col))&0ffh,w
   916  001618  0FD4               	addlw	low(0D4h)
   917  00161A  0101               	movlb	1	; () banked
   918  00161C  0101               	movlb	1	; () banked
   919  00161E  6F07               	movwf	((?_LCD_Inst))&0ffh
   920  001620  EC92  F00B         	call	_LCD_Inst	;wreg free
   921                           	
   922  001624                     l250:		; BSR set to: ?
   923                           
   924                           	line	62
   925                           ;LCD_PortD.C: 62: }
   926  001624                     l246:
   927                           			; BSR set to: ?
   928                           
   929  001624  0012               	return
   930                           	opt stack 0
   931                           GLOBAL __end_of_LCD_Move
   932  001626                     	__end_of_LCD_Move:
   933                           	FNSIZE	_LCD_Move,0,2
   934                           ; =============== function _LCD_Move ends ======
                                 ======
   935                           
   936                           	signat	_LCD_Move,8312
   937                           	global	_LCD_Write
   938                           	global	??_LCD_Write
   939                           	global	?_LCD_Write
   940                                   psect   text5,class=CODE,space=0,reloc=2
   941                           
   942                           	opt lm
   943                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\LCD_PortD.C"
   944                           	line	65
   945  000000                     	__size_of_LCD_Write	equ	__end_of_LCD_Write-_LCD
                                 _Write
   946                           ;LCD_PortD.C: 64: void LCD_Write(unsigned char c
                                 )
   947                           ;LCD_PortD.C: 65: {
   948                           	
   949  001772                     _LCD_Write:		; BSR set to: ?
   950                           
   951                           	opt stack 28
   952                           	line	66
   953                           ;LCD_PortD.C: 66: RD2 = 1;
   954  001772  8483               	bsf	c:(31770/8),(31770)&7	;volatile
   955                           	line	67
   956                           ;LCD_PortD.C: 67: PORTD = (PORTD & 0x0F) | (c & 
                                 0xF0);
   957  001774  C10D  F10E         	movff	(LCD_Write@c),??_LCD_Write+0+0
   958  001778  0EF0               	movlw	0F0h
   959  00177A  0101               	movlb	1	; () banked
   960  00177C  170E               	andwf	(??_LCD_Write+0+0)&0ffh
   961  00177E  5083               	movf	((c:3971)),c,w	;volatile
   962  001780  0B0F               	andlw	low(0Fh)
   963  001782  0101               	movlb	1	; () banked
   964  001784  110E               	iorwf	(??_LCD_Write+0+0)&0ffh,w
   965  001786  6E83               	movwf	((c:3971)),c	;volatile
   966                           	line	68
   967                           ;LCD_PortD.C: 68: LCD_Strobe();
   968  001788  EC00  F00C         	call	_LCD_Strobe	;wreg free
   969                           	line	69
   970                           ;LCD_PortD.C: 69: PORTD = (PORTD & 0x0F) | ((c<<
                                 4) & 0xF0);
   971  00178C  C10D  F10E         	movff	(LCD_Write@c),??_LCD_Write+0+0
   972  001790  0101               	movlb	1	; () banked
   973  001792  3B0E               	swapf	(??_LCD_Write+0+0)&0ffh
   974  001794  0EF0               	movlw	(0ffh shl 4) & 0ffh
   975  001796  170E               	andwf	(??_LCD_Write+0+0)&0ffh
   976  001798  0EF0               	movlw	0F0h
   977  00179A  0101               	movlb	1	; () banked
   978  00179C  170E               	andwf	(??_LCD_Write+0+0)&0ffh
   979  00179E  5083               	movf	((c:3971)),c,w	;volatile
   980  0017A0  0B0F               	andlw	low(0Fh)
   981  0017A2  0101               	movlb	1	; () banked
   982  0017A4  110E               	iorwf	(??_LCD_Write+0+0)&0ffh,w
   983  0017A6  6E83               	movwf	((c:3971)),c	;volatile
   984                           	line	70
   985                           ;LCD_PortD.C: 70: LCD_Strobe();
   986  0017A8  EC00  F00C         	call	_LCD_Strobe	;wreg free
   987                           	line	72
   988                           ;LCD_PortD.C: 72: }
   989  0017AC                     l251:
   990                           			; BSR set to: ?
   991                           
   992  0017AC  0012               	return
   993                           	opt stack 0
   994                           GLOBAL __end_of_LCD_Write
   995  0017AE                     	__end_of_LCD_Write:
   996                           	FNSIZE	_LCD_Write,1,1
   997                           ; =============== function _LCD_Write ends =====
                                 =======
   998                           
   999                           	signat	_LCD_Write,4216
  1000                           	global	_LCD_Init
  1001                           	global	??_LCD_Init
  1002                           	global	?_LCD_Init
  1003                                   psect   text6,class=CODE,space=0,reloc=2
  1004                           
  1005                           	opt lm
  1006                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\LCD_PortD.C"
  1007                           	line	76
  1008  000000                     	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_I
                                 nit
  1009                           ;LCD_PortD.C: 75: void LCD_Init(void)
  1010                           ;LCD_PortD.C: 76: {
  1011                           	
  1012  001626                     _LCD_Init:		; BSR set to: ?
  1013                           
  1014                           	opt stack 28
  1015                           	line	77
  1016                           ;LCD_PortD.C: 77: TRISD = 0x01;
  1017  001626  0E01               	movlw	low(01h)
  1018  001628  6E95               	movwf	((c:3989)),c	;volatile
  1019                           	line	78
  1020                           ;LCD_PortD.C: 78: RD1 = 0;
  1021  00162A  9283               	bcf	c:(31769/8),(31769)&7	;volatile
  1022                           	line	79
  1023                           ;LCD_PortD.C: 79: LCD_Inst(0x33);
  1024  00162C  0101               	movlb	1	; () banked
  1025  00162E  6F05               	movwf	(??_LCD_Init+0+0)&0ffh
  1026  001630  0E33               	movlw	low(033h)
  1027  001632  0101               	movlb	1	; () banked
  1028  001634  0101               	movlb	1	; () banked
  1029  001636  6F07               	movwf	((?_LCD_Inst))&0ffh
  1030  001638  0101               	movlb	1	; () banked
  1031  00163A  5105               	movf	(??_LCD_Init+0+0)&0ffh,w
  1032  00163C  EC92  F00B         	call	_LCD_Inst	;wreg free
  1033                           	line	80
  1034                           ;LCD_PortD.C: 80: LCD_Inst(0x32);
  1035  001640  0101               	movlb	1	; () banked
  1036  001642  6F05               	movwf	(??_LCD_Init+0+0)&0ffh
  1037  001644  0E32               	movlw	low(032h)
  1038  001646  0101               	movlb	1	; () banked
  1039  001648  0101               	movlb	1	; () banked
  1040  00164A  6F07               	movwf	((?_LCD_Inst))&0ffh
  1041  00164C  0101               	movlb	1	; () banked
  1042  00164E  5105               	movf	(??_LCD_Init+0+0)&0ffh,w
  1043  001650  EC92  F00B         	call	_LCD_Inst	;wreg free
  1044                           	line	81
  1045                           ;LCD_PortD.C: 81: LCD_Inst(0x28);
  1046  001654  0101               	movlb	1	; () banked
  1047  001656  6F05               	movwf	(??_LCD_Init+0+0)&0ffh
  1048  001658  0E28               	movlw	low(028h)
  1049  00165A  0101               	movlb	1	; () banked
  1050  00165C  0101               	movlb	1	; () banked
  1051  00165E  6F07               	movwf	((?_LCD_Inst))&0ffh
  1052  001660  0101               	movlb	1	; () banked
  1053  001662  5105               	movf	(??_LCD_Init+0+0)&0ffh,w
  1054  001664  EC92  F00B         	call	_LCD_Inst	;wreg free
  1055                           	line	82
  1056                           ;LCD_PortD.C: 82: LCD_Inst(0x0E);
  1057  001668  0101               	movlb	1	; () banked
  1058  00166A  6F05               	movwf	(??_LCD_Init+0+0)&0ffh
  1059  00166C  0E0E               	movlw	low(0Eh)
  1060  00166E  0101               	movlb	1	; () banked
  1061  001670  0101               	movlb	1	; () banked
  1062  001672  6F07               	movwf	((?_LCD_Inst))&0ffh
  1063  001674  0101               	movlb	1	; () banked
  1064  001676  5105               	movf	(??_LCD_Init+0+0)&0ffh,w
  1065  001678  EC92  F00B         	call	_LCD_Inst	;wreg free
  1066                           	line	83
  1067                           ;LCD_PortD.C: 83: LCD_Inst(0x01);
  1068  00167C  0101               	movlb	1	; () banked
  1069  00167E  6F05               	movwf	(??_LCD_Init+0+0)&0ffh
  1070  001680  0E01               	movlw	low(01h)
  1071  001682  0101               	movlb	1	; () banked
  1072  001684  0101               	movlb	1	; () banked
  1073  001686  6F07               	movwf	((?_LCD_Inst))&0ffh
  1074  001688  0101               	movlb	1	; () banked
  1075  00168A  5105               	movf	(??_LCD_Init+0+0)&0ffh,w
  1076  00168C  EC92  F00B         	call	_LCD_Inst	;wreg free
  1077                           	line	84
  1078                           ;LCD_PortD.C: 84: LCD_Inst(0x06);
  1079  001690  0101               	movlb	1	; () banked
  1080  001692  6F05               	movwf	(??_LCD_Init+0+0)&0ffh
  1081  001694  0E06               	movlw	low(06h)
  1082  001696  0101               	movlb	1	; () banked
  1083  001698  0101               	movlb	1	; () banked
  1084  00169A  6F07               	movwf	((?_LCD_Inst))&0ffh
  1085  00169C  0101               	movlb	1	; () banked
  1086  00169E  5105               	movf	(??_LCD_Init+0+0)&0ffh,w
  1087  0016A0  EC92  F00B         	call	_LCD_Inst	;wreg free
  1088                           	line	85
  1089                           ;LCD_PortD.C: 85: }
  1090  0016A4                     l252:
  1091                           			; BSR set to: ?
  1092                           
  1093  0016A4  0012               	return
  1094                           	opt stack 0
  1095                           GLOBAL __end_of_LCD_Init
  1096  0016A6                     	__end_of_LCD_Init:
  1097                           	FNSIZE	_LCD_Init,1,0
  1098                           ; =============== function _LCD_Init ends ======
                                 ======
  1099                           
  1100                           	signat	_LCD_Init,88
  1101                           	global	___lwdiv
  1102                           	global	??___lwdiv
  1103                           	global	?___lwdiv
  1104                                   psect   text7,class=CODE,space=0,reloc=2
  1105                           
  1106                           	opt lm
  1107                           	file	"E:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\lwdiv.c"
  1108                           	line	5
  1109  000000                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1110                           	
  1111  001308                     ___lwdiv:		; BSR set to: ?
  1112                           
  1113                           	opt stack 28
  1114                           	line	9
  1115  001308  0E00               	movlw	low(0)
  1116  00130A  0101               	movlb	1	; () banked
  1117  00130C  0101               	movlb	1	; () banked
  1118  00130E  6F12               	movwf	((___lwdiv@quotient))&0ffh
  1119  001310  0E00               	movlw	high(0)
  1120  001312  0101               	movlb	1	; () banked
  1121  001314  6F13               	movwf	((___lwdiv@quotient+1))&0ffh
  1122                           	line	10
  1123  001316  0101               	movlb	1	; () banked
  1124  001318  0101               	movlb	1	; () banked
  1125  00131A  5110               	movf	((___lwdiv@divisor+1))&0ffh,w
  1126  00131C  110F               	iorwf ((___lwdiv@divisor))&0ffh,w
  1127                           
  1128  00131E  B4D8               	btfsc	status,2
  1129  001320  D001               	goto	u1921
  1130  001322  D001               	goto	u1920
  1131  001324                     u1921:
  1132  001324  D047               	goto	l798
  1133  001326                     u1920:
  1134                           	line	11
  1135  001326  0101               	movlb	1	; () banked
  1136  001328  6F14               	movwf	(??___lwdiv+3+0)&0ffh
  1137  00132A  0E01               	movlw	low(01h)
  1138  00132C  0101               	movlb	1	; () banked
  1139  00132E  0101               	movlb	1	; () banked
  1140  001330  6F11               	movwf	((___lwdiv@counter))&0ffh
  1141  001332  0101               	movlb	1	; () banked
  1142  001334  5114               	movf	(??___lwdiv+3+0)&0ffh,w
  1143                           	line	12
  1144  001336  D009               	goto	l799
  1145                           	
  1146  001338                     l800:		; BSR set to: ?
  1147                           
  1148                           	line	13
  1149  001338  0101               	movlb	1	; () banked
  1150  00133A  90D8               	bcf	status,0
  1151  00133C  0101               	movlb	1	; () banked
  1152  00133E  370F               	rlcf	((___lwdiv@divisor))&0ffh
  1153  001340  0101               	movlb	1	; () banked
  1154  001342  3710               	rlcf	((___lwdiv@divisor+1))&0ffh
  1155                           	line	14
  1156  001344  0101               	movlb	1	; () banked
  1157  001346  0101               	movlb	1	; () banked
  1158  001348  2B11               	incf	((___lwdiv@counter))&0ffh
  1159                           	line	15
  1160                           	
  1161  00134A                     l799:		; BSR set to: ?
  1162                           
  1163                           	line	12
  1164  00134A  0101               	movlb	1	; () banked
  1165                           	
  1166  00134C  0101               	movlb	1	; () banked
  1167  00134E  AF10               	btfss	((___lwdiv@divisor+1))&0ffh,(15)&7
  1168  001350  D001               	goto	u1931
  1169  001352  D001               	goto	u1930
  1170  001354                     u1931:
  1171  001354  D7F1               	goto	l800
  1172  001356                     u1930:
  1173                           	
  1174  001356                     l801:		; BSR set to: ?
  1175                           
  1176                           	line	16
  1177                           	
  1178  001356                     l804:		; BSR set to: ?
  1179                           
  1180                           	line	17
  1181  001356  0101               	movlb	1	; () banked
  1182  001358  90D8               	bcf	status,0
  1183  00135A  0101               	movlb	1	; () banked
  1184  00135C  3712               	rlcf	((___lwdiv@quotient))&0ffh
  1185  00135E  0101               	movlb	1	; () banked
  1186  001360  3713               	rlcf	((___lwdiv@quotient+1))&0ffh
  1187                           	line	18
  1188  001362  0101               	movlb	1	; () banked
  1189  001364  0101               	movlb	1	; () banked
  1190  001366  510F               	movf	((___lwdiv@divisor))&0ffh,w
  1191  001368  0101               	movlb	1	; () banked
  1192  00136A  0101               	movlb	1	; () banked
  1193  00136C  5D0D               	subwf	((___lwdiv@dividend))&0ffh,w
  1194  00136E  0101               	movlb	1	; () banked
  1195  001370  0101               	movlb	1	; () banked
  1196  001372  5110               	movf	((___lwdiv@divisor+1))&0ffh,w
  1197  001374  0101               	movlb	1	; () banked
  1198  001376  0101               	movlb	1	; () banked
  1199  001378  590E               	subwfb	((___lwdiv@dividend+1))&0ffh,w
  1200  00137A  A0D8               	btfss	status,0
  1201  00137C  D001               	goto	u1941
  1202  00137E  D001               	goto	u1940
  1203  001380                     u1941:
  1204  001380  D00F               	goto	l805
  1205  001382                     u1940:
  1206                           	line	19
  1207  001382  0101               	movlb	1	; () banked
  1208  001384  0101               	movlb	1	; () banked
  1209  001386  510F               	movf	((___lwdiv@divisor))&0ffh,w
  1210  001388  0101               	movlb	1	; () banked
  1211  00138A  0101               	movlb	1	; () banked
  1212  00138C  5F0D               	subwf	((___lwdiv@dividend))&0ffh
  1213  00138E  0101               	movlb	1	; () banked
  1214  001390  0101               	movlb	1	; () banked
  1215  001392  5110               	movf	((___lwdiv@divisor+1))&0ffh,w
  1216  001394  0101               	movlb	1	; () banked
  1217  001396  0101               	movlb	1	; () banked
  1218  001398  5B0E               	subwfb	((___lwdiv@dividend+1))&0ffh
  1219                           
  1220                           	line	20
  1221  00139A  0101               	movlb	1	; () banked
  1222  00139C  0101               	movlb	1	; () banked
  1223  00139E  8112               	bsf	(0+(0/8)+(___lwdiv@quotient))&0ffh,(0)&7
  1224                           	line	21
  1225                           	
  1226  0013A0                     l805:		; BSR set to: ?
  1227                           
  1228                           	line	22
  1229  0013A0  0101               	movlb	1	; () banked
  1230  0013A2  90D8               	bcf	status,0
  1231  0013A4  0101               	movlb	1	; () banked
  1232  0013A6  3310               	rrcf	((___lwdiv@divisor+1))&0ffh
  1233  0013A8  0101               	movlb	1	; () banked
  1234  0013AA  330F               	rrcf	((___lwdiv@divisor))&0ffh
  1235                           	line	23
  1236  0013AC  0101               	movlb	1	; () banked
  1237  0013AE  0101               	movlb	1	; () banked
  1238  0013B0  2F11               	decfsz	((___lwdiv@counter))&0ffh
  1239                           	
  1240  0013B2  D7D1               	goto	l804
  1241                           	
  1242  0013B4                     l803:		; BSR set to: ?
  1243                           
  1244                           	line	24
  1245                           	
  1246  0013B4                     l798:		; BSR set to: ?
  1247                           
  1248                           	line	25
  1249  0013B4  C112  F10D         	movff	(___lwdiv@quotient),(?___lwdiv)
  1250  0013B8  C113  F10E         	movff	(___lwdiv@quotient+1),(?___lwdiv+1)
  1251  0013BC  D000               	goto	l797
  1252                           	line	26
  1253  0013BE                     l797:
  1254                           			; BSR set to: ?
  1255                           
  1256  0013BE  0012               	return
  1257                           	opt stack 0
  1258                           GLOBAL __end_of___lwdiv
  1259  0013C0                     	__end_of___lwdiv:
  1260                           	FNSIZE	___lwdiv,4,4
  1261                           ; =============== function ___lwdiv ends =======
                                 =====
  1262                           
  1263                           	signat	___lwdiv,8314
  1264                           	global	___lwmod
  1265                           	global	??___lwmod
  1266                           	global	?___lwmod
  1267                                   psect   text8,class=CODE,space=0,reloc=2
  1268                           
  1269                           	opt lm
  1270                           	file	"E:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\lwmod.c"
  1271                           	line	5
  1272  000000                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1273                           	
  1274  00150A                     ___lwmod:		; BSR set to: ?
  1275                           
  1276                           	opt stack 28
  1277                           	line	8
  1278  00150A  0101               	movlb	1	; () banked
  1279  00150C  0101               	movlb	1	; () banked
  1280  00150E  5110               	movf	((___lwmod@divisor+1))&0ffh,w
  1281  001510  110F               	iorwf ((___lwmod@divisor))&0ffh,w
  1282                           
  1283  001512  B4D8               	btfsc	status,2
  1284  001514  D001               	goto	u1951
  1285  001516  D001               	goto	u1950
  1286  001518                     u1951:
  1287  001518  D03E               	goto	l807
  1288  00151A                     u1950:
  1289                           	line	9
  1290  00151A  0101               	movlb	1	; () banked
  1291  00151C  6F12               	movwf	(??___lwmod+1+0)&0ffh
  1292  00151E  0E01               	movlw	low(01h)
  1293  001520  0101               	movlb	1	; () banked
  1294  001522  0101               	movlb	1	; () banked
  1295  001524  6F11               	movwf	((___lwmod@counter))&0ffh
  1296  001526  0101               	movlb	1	; () banked
  1297  001528  5112               	movf	(??___lwmod+1+0)&0ffh,w
  1298                           	line	10
  1299  00152A  D009               	goto	l808
  1300                           	
  1301  00152C                     l809:		; BSR set to: ?
  1302                           
  1303                           	line	11
  1304  00152C  0101               	movlb	1	; () banked
  1305  00152E  90D8               	bcf	status,0
  1306  001530  0101               	movlb	1	; () banked
  1307  001532  370F               	rlcf	((___lwmod@divisor))&0ffh
  1308  001534  0101               	movlb	1	; () banked
  1309  001536  3710               	rlcf	((___lwmod@divisor+1))&0ffh
  1310                           	line	12
  1311  001538  0101               	movlb	1	; () banked
  1312  00153A  0101               	movlb	1	; () banked
  1313  00153C  2B11               	incf	((___lwmod@counter))&0ffh
  1314                           	line	13
  1315                           	
  1316  00153E                     l808:		; BSR set to: ?
  1317                           
  1318                           	line	10
  1319  00153E  0101               	movlb	1	; () banked
  1320                           	
  1321  001540  0101               	movlb	1	; () banked
  1322  001542  AF10               	btfss	((___lwmod@divisor+1))&0ffh,(15)&7
  1323  001544  D001               	goto	u1961
  1324  001546  D001               	goto	u1960
  1325  001548                     u1961:
  1326  001548  D7F1               	goto	l809
  1327  00154A                     u1960:
  1328                           	
  1329  00154A                     l810:		; BSR set to: ?
  1330                           
  1331                           	line	14
  1332                           	
  1333  00154A                     l813:		; BSR set to: ?
  1334                           
  1335                           	line	15
  1336  00154A  0101               	movlb	1	; () banked
  1337  00154C  0101               	movlb	1	; () banked
  1338  00154E  510F               	movf	((___lwmod@divisor))&0ffh,w
  1339  001550  0101               	movlb	1	; () banked
  1340  001552  0101               	movlb	1	; () banked
  1341  001554  5D0D               	subwf	((___lwmod@dividend))&0ffh,w
  1342  001556  0101               	movlb	1	; () banked
  1343  001558  0101               	movlb	1	; () banked
  1344  00155A  5110               	movf	((___lwmod@divisor+1))&0ffh,w
  1345  00155C  0101               	movlb	1	; () banked
  1346  00155E  0101               	movlb	1	; () banked
  1347  001560  590E               	subwfb	((___lwmod@dividend+1))&0ffh,w
  1348  001562  A0D8               	btfss	status,0
  1349  001564  D001               	goto	u1971
  1350  001566  D001               	goto	u1970
  1351  001568                     u1971:
  1352  001568  D00C               	goto	l814
  1353  00156A                     u1970:
  1354                           	line	16
  1355  00156A  0101               	movlb	1	; () banked
  1356  00156C  0101               	movlb	1	; () banked
  1357  00156E  510F               	movf	((___lwmod@divisor))&0ffh,w
  1358  001570  0101               	movlb	1	; () banked
  1359  001572  0101               	movlb	1	; () banked
  1360  001574  5F0D               	subwf	((___lwmod@dividend))&0ffh
  1361  001576  0101               	movlb	1	; () banked
  1362  001578  0101               	movlb	1	; () banked
  1363  00157A  5110               	movf	((___lwmod@divisor+1))&0ffh,w
  1364  00157C  0101               	movlb	1	; () banked
  1365  00157E  0101               	movlb	1	; () banked
  1366  001580  5B0E               	subwfb	((___lwmod@dividend+1))&0ffh
  1367                           
  1368                           	
  1369  001582                     l814:		; BSR set to: ?
  1370                           
  1371                           	line	17
  1372  001582  0101               	movlb	1	; () banked
  1373  001584  90D8               	bcf	status,0
  1374  001586  0101               	movlb	1	; () banked
  1375  001588  3310               	rrcf	((___lwmod@divisor+1))&0ffh
  1376  00158A  0101               	movlb	1	; () banked
  1377  00158C  330F               	rrcf	((___lwmod@divisor))&0ffh
  1378                           	line	18
  1379  00158E  0101               	movlb	1	; () banked
  1380  001590  0101               	movlb	1	; () banked
  1381  001592  2F11               	decfsz	((___lwmod@counter))&0ffh
  1382                           	
  1383  001594  D7DA               	goto	l813
  1384                           	
  1385  001596                     l812:		; BSR set to: ?
  1386                           
  1387                           	line	19
  1388                           	
  1389  001596                     l807:		; BSR set to: ?
  1390                           
  1391                           	line	20
  1392  001596  C10D  F10D         	movff	(___lwmod@dividend),(?___lwmod)
  1393  00159A  C10E  F10E         	movff	(___lwmod@dividend+1),(?___lwmod+1)
  1394  00159E  D000               	goto	l806
  1395                           	line	21
  1396  0015A0                     l806:
  1397                           			; BSR set to: ?
  1398                           
  1399  0015A0  0012               	return
  1400                           	opt stack 0
  1401                           GLOBAL __end_of___lwmod
  1402  0015A2                     	__end_of___lwmod:
  1403                           	FNSIZE	___lwmod,2,4
  1404                           ; =============== function ___lwmod ends =======
                                 =====
  1405                           
  1406                           	signat	___lwmod,8314
  1407                           	global	_LCD_Inst
  1408                           	global	??_LCD_Inst
  1409                           	global	?_LCD_Inst
  1410                                   psect   text9,class=CODE,space=0,reloc=2
  1411                           
  1412                           	opt lm
  1413                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\LCD_PortD.C"
  1414                           	line	47
  1415  000000                     	__size_of_LCD_Inst	equ	__end_of_LCD_Inst-_LCD_I
                                 nst
  1416                           ;LCD_PortD.C: 46: void LCD_Inst(unsigned char c)
  1417                           ;LCD_PortD.C: 47: {
  1418                           	
  1419  001724                     _LCD_Inst:		; BSR set to: ?
  1420                           
  1421                           	opt stack 27
  1422                           	line	48
  1423                           ;LCD_PortD.C: 48: RD2 = 0;
  1424  001724  9483               	bcf	c:(31770/8),(31770)&7	;volatile
  1425                           	line	49
  1426                           ;LCD_PortD.C: 49: PORTD = (PORTD & 0x0F) | (c & 
                                 0xF0);
  1427  001726  C107  F108         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
  1428  00172A  0EF0               	movlw	0F0h
  1429  00172C  0101               	movlb	1	; () banked
  1430  00172E  1708               	andwf	(??_LCD_Inst+0+0)&0ffh
  1431  001730  5083               	movf	((c:3971)),c,w	;volatile
  1432  001732  0B0F               	andlw	low(0Fh)
  1433  001734  0101               	movlb	1	; () banked
  1434  001736  1108               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
  1435  001738  6E83               	movwf	((c:3971)),c	;volatile
  1436                           	line	50
  1437                           ;LCD_PortD.C: 50: LCD_Strobe();
  1438  00173A  EC00  F00C         	call	_LCD_Strobe	;wreg free
  1439                           	line	51
  1440                           ;LCD_PortD.C: 51: PORTD = (PORTD & 0x0F) | ((c<<
                                 4) & 0xF0);
  1441  00173E  C107  F108         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
  1442  001742  0101               	movlb	1	; () banked
  1443  001744  3B08               	swapf	(??_LCD_Inst+0+0)&0ffh
  1444  001746  0EF0               	movlw	(0ffh shl 4) & 0ffh
  1445  001748  1708               	andwf	(??_LCD_Inst+0+0)&0ffh
  1446  00174A  0EF0               	movlw	0F0h
  1447  00174C  0101               	movlb	1	; () banked
  1448  00174E  1708               	andwf	(??_LCD_Inst+0+0)&0ffh
  1449  001750  5083               	movf	((c:3971)),c,w	;volatile
  1450  001752  0B0F               	andlw	low(0Fh)
  1451  001754  0101               	movlb	1	; () banked
  1452  001756  1108               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
  1453  001758  6E83               	movwf	((c:3971)),c	;volatile
  1454                           	line	52
  1455                           ;LCD_PortD.C: 52: LCD_Strobe();
  1456  00175A  EC00  F00C         	call	_LCD_Strobe	;wreg free
  1457                           	line	53
  1458                           ;LCD_PortD.C: 53: Wait_ms(10);
  1459  00175E  0E0A               	movlw	low(0Ah)
  1460  001760  0101               	movlb	1	; () banked
  1461  001762  0101               	movlb	1	; () banked
  1462  001764  6F09               	movwf	((?_Wait_ms))&0ffh
  1463  001766  0E00               	movlw	high(0Ah)
  1464  001768  0101               	movlb	1	; () banked
  1465  00176A  6F0A               	movwf	((?_Wait_ms+1))&0ffh
  1466  00176C  EC53  F00B         	call	_Wait_ms	;wreg free
  1467                           	line	54
  1468                           ;LCD_PortD.C: 54: }
  1469  001770                     l245:
  1470                           			; BSR set to: ?
  1471                           
  1472  001770  0012               	return
  1473                           	opt stack 0
  1474                           GLOBAL __end_of_LCD_Inst
  1475  001772                     	__end_of_LCD_Inst:
  1476                           	FNSIZE	_LCD_Inst,1,1
  1477                           ; =============== function _LCD_Inst ends ======
                                 ======
  1478                           
  1479                           	signat	_LCD_Inst,4216
  1480                           	global	_LCD_Strobe
  1481                           	global	??_LCD_Strobe
  1482                           	global	?_LCD_Strobe
  1483                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  1484                           
  1485                           	opt lm
  1486                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\LCD_PortD.C"
  1487                           	line	35
  1488  000000                     	__size_of_LCD_Strobe	equ	__end_of_LCD_Strobe-_L
                                 CD_Strobe
  1489                           ;LCD_PortD.C: 34: void LCD_Strobe(void)
  1490                           ;LCD_PortD.C: 35: {
  1491                           	
  1492  001800                     _LCD_Strobe:		; BSR set to: ?
  1493                           
  1494                           	opt stack 26
  1495                           	line	36
  1496                           ;LCD_PortD.C: 36: RD3 = 0;
  1497  001800  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  1498                           	line	37
  1499                           ;LCD_PortD.C: 37: LCD_Pause();
  1500  001802  ECD7  F00B         	call	_LCD_Pause	;wreg free
  1501                           	line	38
  1502                           ;LCD_PortD.C: 38: RD3 = 1;
  1503  001806  8683               	bsf	c:(31771/8),(31771)&7	;volatile
  1504                           	line	39
  1505                           ;LCD_PortD.C: 39: LCD_Pause();
  1506  001808  ECD7  F00B         	call	_LCD_Pause	;wreg free
  1507                           	line	40
  1508                           ;LCD_PortD.C: 40: RD3 = 0;
  1509  00180C  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  1510                           	line	41
  1511                           ;LCD_PortD.C: 41: LCD_Pause();
  1512  00180E  ECD7  F00B         	call	_LCD_Pause	;wreg free
  1513                           	line	42
  1514                           ;LCD_PortD.C: 42: }
  1515  001812                     l244:
  1516                           			; BSR set to: ?
  1517                           
  1518  001812  0012               	return
  1519                           	opt stack 0
  1520                           GLOBAL __end_of_LCD_Strobe
  1521  001814                     	__end_of_LCD_Strobe:
  1522                           	FNSIZE	_LCD_Strobe,0,0
  1523                           ; =============== function _LCD_Strobe ends ====
                                 ========
  1524                           
  1525                           	signat	_LCD_Strobe,88
  1526                           	global	_Wait_ms
  1527                           	global	??_Wait_ms
  1528                           	global	?_Wait_ms
  1529                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  1530                           
  1531                           	opt lm
  1532                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\LCD_PortD.C"
  1533                           	line	19
  1534  000000                     	__size_of_Wait_ms	equ	__end_of_Wait_ms-_Wait_ms
  1535                           ;LCD_PortD.C: 18: void Wait_ms(unsigned int X)
  1536                           ;LCD_PortD.C: 19: {
  1537                           	
  1538  0016A6                     _Wait_ms:		; BSR set to: ?
  1539                           
  1540                           	opt stack 26
  1541                           	line	22
  1542                           ;LCD_PortD.C: 20: unsigned int i, j;
  1543                           ;LCD_PortD.C: 22: for (i=0; i<X; i++)
  1544  0016A6  0E00               	movlw	low(0)
  1545  0016A8  0101               	movlb	1	; () banked
  1546  0016AA  0101               	movlb	1	; () banked
  1547  0016AC  6F0B               	movwf	((Wait_ms@i))&0ffh
  1548  0016AE  0E00               	movlw	high(0)
  1549  0016B0  0101               	movlb	1	; () banked
  1550  0016B2  6F0C               	movwf	((Wait_ms@i+1))&0ffh
  1551  0016B4  D026               	goto	l236
  1552                           	line	23
  1553                           	
  1554  0016B6                     l233:		; BSR set to: ?
  1555                           
  1556                           ;LCD_PortD.C: 23: for (j=0; j<617; j++);
  1557  0016B6  0E00               	movlw	low(0)
  1558  0016B8  0101               	movlb	1	; () banked
  1559  0016BA  0101               	movlb	1	; () banked
  1560  0016BC  6F0D               	movwf	((Wait_ms@j))&0ffh
  1561  0016BE  0E00               	movlw	high(0)
  1562  0016C0  0101               	movlb	1	; () banked
  1563  0016C2  6F0E               	movwf	((Wait_ms@j+1))&0ffh
  1564  0016C4  0E69               	movlw	069h
  1565  0016C6  0101               	movlb	1	; () banked
  1566  0016C8  0101               	movlb	1	; () banked
  1567  0016CA  5D0D               	subwf	((Wait_ms@j))&0ffh,w
  1568  0016CC  0E02               	movlw	02h
  1569  0016CE  0101               	movlb	1	; () banked
  1570  0016D0  590E               	subwfb	((Wait_ms@j+1))&0ffh,w
  1571  0016D2  A0D8               	btfss	status,0
  1572  0016D4  D001               	goto	u1821
  1573  0016D6  D001               	goto	u1820
  1574  0016D8                     u1821:
  1575  0016D8  D001               	goto	l237
  1576  0016DA                     u1820:
  1577  0016DA  D00F               	goto	l238
  1578                           	
  1579  0016DC                     l237:		; BSR set to: ?
  1580                           
  1581  0016DC  0101               	movlb	1	; () banked
  1582  0016DE  0101               	movlb	1	; () banked
  1583  0016E0  4B0D               	infsnz	((Wait_ms@j))&0ffh
  1584  0016E2  2B0E               	incf	((Wait_ms@j+1))&0ffh
  1585  0016E4  0E69               	movlw	069h
  1586  0016E6  0101               	movlb	1	; () banked
  1587  0016E8  0101               	movlb	1	; () banked
  1588  0016EA  5D0D               	subwf	((Wait_ms@j))&0ffh,w
  1589  0016EC  0E02               	movlw	02h
  1590  0016EE  0101               	movlb	1	; () banked
  1591  0016F0  590E               	subwfb	((Wait_ms@j+1))&0ffh,w
  1592  0016F2  A0D8               	btfss	status,0
  1593  0016F4  D001               	goto	u1831
  1594  0016F6  D001               	goto	u1830
  1595  0016F8                     u1831:
  1596  0016F8  D7F1               	goto	l237
  1597  0016FA                     u1830:
  1598                           	
  1599  0016FA                     l238:		; BSR set to: ?
  1600                           
  1601                           	line	22
  1602  0016FA  0101               	movlb	1	; () banked
  1603  0016FC  0101               	movlb	1	; () banked
  1604  0016FE  4B0B               	infsnz	((Wait_ms@i))&0ffh
  1605  001700  2B0C               	incf	((Wait_ms@i+1))&0ffh
  1606                           	
  1607  001702                     l236:		; BSR set to: ?
  1608                           
  1609  001702  0101               	movlb	1	; () banked
  1610  001704  0101               	movlb	1	; () banked
  1611  001706  5109               	movf	((Wait_ms@X))&0ffh,w
  1612  001708  0101               	movlb	1	; () banked
  1613  00170A  0101               	movlb	1	; () banked
  1614  00170C  5D0B               	subwf	((Wait_ms@i))&0ffh,w
  1615  00170E  0101               	movlb	1	; () banked
  1616  001710  0101               	movlb	1	; () banked
  1617  001712  510A               	movf	((Wait_ms@X+1))&0ffh,w
  1618  001714  0101               	movlb	1	; () banked
  1619  001716  0101               	movlb	1	; () banked
  1620  001718  590C               	subwfb	((Wait_ms@i+1))&0ffh,w
  1621  00171A  A0D8               	btfss	status,0
  1622  00171C  D001               	goto	u1841
  1623  00171E  D001               	goto	u1840
  1624  001720                     u1841:
  1625  001720  D7CA               	goto	l233
  1626  001722                     u1840:
  1627                           	
  1628  001722                     l234:		; BSR set to: ?
  1629                           
  1630                           	line	24
  1631                           ;LCD_PortD.C: 24: }
  1632  001722                     l232:
  1633                           			; BSR set to: ?
  1634                           
  1635  001722  0012               	return
  1636                           	opt stack 0
  1637                           GLOBAL __end_of_Wait_ms
  1638  001724                     	__end_of_Wait_ms:
  1639                           	FNSIZE	_Wait_ms,4,2
  1640                           ; =============== function _Wait_ms ends =======
                                 =====
  1641                           
  1642                           	signat	_Wait_ms,4216
  1643                           	global	_LCD_Pause
  1644                           	global	??_LCD_Pause
  1645                           	global	?_LCD_Pause
  1646                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  1647                           
  1648                           	opt lm
  1649                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\LCD_PortD.C"
  1650                           	line	28
  1651  000000                     	__size_of_LCD_Pause	equ	__end_of_LCD_Pause-_LCD
                                 _Pause
  1652                           ;LCD_PortD.C: 27: void LCD_Pause(void)
  1653                           ;LCD_PortD.C: 28: {
  1654                           	
  1655  0017AE                     _LCD_Pause:		; BSR set to: ?
  1656                           
  1657                           	opt stack 25
  1658                           	line	30
  1659  0017AE  0101               	movlb	1	; () banked
  1660  0017B0  6F10               	movwf	(??_LCD_Pause+1+0)&0ffh
  1661  0017B2  0E00               	movlw	low(0)
  1662  0017B4  0101               	movlb	1	; () banked
  1663  0017B6  0101               	movlb	1	; () banked
  1664  0017B8  6F0F               	movwf	((LCD_Pause@x))&0ffh
  1665  0017BA  0101               	movlb	1	; () banked
  1666  0017BC  5110               	movf	(??_LCD_Pause+1+0)&0ffh,w
  1667  0017BE  0E13               	movlw	(014h-1)
  1668  0017C0  0101               	movlb	1	; () banked
  1669  0017C2  0101               	movlb	1	; () banked
  1670  0017C4  650F               	cpfsgt	((LCD_Pause@x))&0ffh
  1671  0017C6  D001               	goto	u1851
  1672  0017C8  D001               	goto	u1850
  1673  0017CA                     u1851:
  1674  0017CA  D001               	goto	l241
  1675  0017CC                     u1850:
  1676  0017CC  D00A               	goto	l242
  1677                           	
  1678  0017CE                     l241:		; BSR set to: ?
  1679                           
  1680  0017CE  0101               	movlb	1	; () banked
  1681  0017D0  0101               	movlb	1	; () banked
  1682  0017D2  2B0F               	incf	((LCD_Pause@x))&0ffh
  1683  0017D4  0E13               	movlw	(014h-1)
  1684  0017D6  0101               	movlb	1	; () banked
  1685  0017D8  0101               	movlb	1	; () banked
  1686  0017DA  650F               	cpfsgt	((LCD_Pause@x))&0ffh
  1687  0017DC  D001               	goto	u1861
  1688  0017DE  D001               	goto	u1860
  1689  0017E0                     u1861:
  1690  0017E0  D7F6               	goto	l241
  1691  0017E2                     u1860:
  1692                           	
  1693  0017E2                     l242:		; BSR set to: ?
  1694                           
  1695                           	line	31
  1696                           ;LCD_PortD.C: 31: }
  1697  0017E2                     l240:
  1698                           			; BSR set to: ?
  1699                           
  1700  0017E2  0012               	return
  1701                           	opt stack 0
  1702                           GLOBAL __end_of_LCD_Pause
  1703  0017E4                     	__end_of_LCD_Pause:
  1704                           	FNSIZE	_LCD_Pause,2,0
  1705                           ; =============== function _LCD_Pause ends =====
                                 =======
  1706                           
  1707                           	signat	_LCD_Pause,88
  1708                           	global	_IntServe
  1709                           	global	??_IntServe
  1710                           	global	?_IntServe
  1711                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  1712                           
  1713                           	opt lm
  1714                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\Interupt.c"
  1715                           	line	14
  1716  000000                     	__size_of_IntServe	equ	__end_of_IntServe-_IntSe
                                 rve
  1717                           ;Interupt.c: 13: void interrupt IntServe(void)
  1718                           ;Interupt.c: 14: {
  1719                           	
  1720  001466                     _IntServe:		; BSR set to: ?
  1721                           
  1722  001466  0006               	pop	; remove dummy address from shadow register
                                  refresh
  1723                           
  1724                           	opt stack 31
  1725                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
  1726                           	global	int_func
  1727  000808                     int_func:
  1728                                   psect   intcode
  1729  000808  CFFA F115          	movff	pclat+0,??_IntServe+0
  1730  00080C  CFFB F116          	movff	pclat+1,??_IntServe+1
  1731  000810  CFE9 F117          	movff	fsr0l+0,??_IntServe+2
  1732  000814  ED33  F00A         	call	_IntServe,f	;refresh shadow registers
  1733                                   psect   text13
  1734  001468  CFEA F118          	movff	fsr0h+0,??_IntServe+3
  1735  00146C  CFE1 F119          	movff	fsr1l+0,??_IntServe+4
  1736  001470  CFE2 F11A          	movff	fsr1h+0,??_IntServe+5
  1737  001474  CFD9 F11B          	movff	fsr2l+0,??_IntServe+6
  1738  001478  CFDA F11C          	movff	fsr2h+0,??_IntServe+7
  1739  00147C  CFF3 F11D          	movff	prodl+0,??_IntServe+8
  1740  001480  CFF4 F11E          	movff	prodh+0,??_IntServe+9
  1741  001484  CFF6 F11F          	movff	tblptrl+0,??_IntServe+10
  1742  001488  CFF7 F120          	movff	tblptrh+0,??_IntServe+11
  1743  00148C  CFF8 F121          	movff	tblptru+0,??_IntServe+12
  1744                           	line	15
  1745  001490  A29E               	btfss	c:(31985/8),(31985)&7	;volatile
  1746  001492  D001               	goto	i2u1871
  1747  001494  D001               	goto	i2u1870
  1748  001496                     i2u1871:
  1749  001496  D00B               	goto	i2l484
  1750  001498                     i2u1870:
  1751                           	line	17
  1752                           ;Interupt.c: 16: {
  1753                           ;Interupt.c: 17: if (DELAY)
  1754  001498  500A               	movf	((c:9+1)),c,w
  1755  00149A  1009               	iorwf ((c:9)),c,w
  1756                           
  1757  00149C  B4D8               	btfsc	status,2
  1758  00149E  D001               	goto	i2u1881
  1759  0014A0  D001               	goto	i2u1880
  1760  0014A2                     i2u1881:
  1761  0014A2  D003               	goto	i2l485
  1762  0014A4                     i2u1880:
  1763                           	line	19
  1764                           ;Interupt.c: 18: {
  1765                           ;Interupt.c: 19: DELAY -= 1;
  1766  0014A4  0609               	decf	((c:9)),c
  1767  0014A6  A0D8               	btfss	status,0
  1768  0014A8  060A               	decf	((c:9+1)),c
  1769                           	line	20
  1770                           	
  1771  0014AA                     i2l485:		; BSR set to: ?
  1772                           
  1773                           	line	21
  1774                           ;Interupt.c: 20: }
  1775                           ;Interupt.c: 21: RC7=!RC7;
  1776  0014AA  7E82               	btg	c:(31767/8),(31767)&7	;volatile
  1777                           	line	22
  1778                           ;Interupt.c: 22: TMR2IF = 0;
  1779  0014AC  929E               	bcf	c:(31985/8),(31985)&7	;volatile
  1780                           	line	24
  1781                           	
  1782  0014AE                     i2l484:		; BSR set to: ?
  1783                           
  1784                           	line	26
  1785                           ;Interupt.c: 24: }
  1786                           ;Interupt.c: 26: if (TMR0IF)
  1787  0014AE  A4F2               	btfss	c:(32658/8),(32658)&7	;volatile
  1788  0014B0  D001               	goto	i2u1891
  1789  0014B2  D001               	goto	i2u1890
  1790  0014B4                     i2u1891:
  1791  0014B4  D00F               	goto	i2l486
  1792  0014B6                     i2u1890:
  1793                           	line	28
  1794                           ;Interupt.c: 27: {
  1795                           ;Interupt.c: 28: TMR0 = -3906;
  1796  0014B6  0EBE               	movlw	low(0F0BEh)
  1797  0014B8  6ED6               	movwf	((c:4054)),c	;volatile
  1798  0014BA  0EF0               	movlw	high(0F0BEh)
  1799  0014BC  6ED7               	movwf	((c:4054+1)),c	;volatile
  1800                           	line	29
  1801                           ;Interupt.c: 29: if(DELAY0)
  1802  0014BE  500E               	movf	((c:13+1)),c,w
  1803  0014C0  100D               	iorwf ((c:13)),c,w
  1804                           
  1805  0014C2  B4D8               	btfsc	status,2
  1806  0014C4  D001               	goto	i2u1901
  1807  0014C6  D001               	goto	i2u1900
  1808  0014C8                     i2u1901:
  1809  0014C8  D003               	goto	i2l487
  1810  0014CA                     i2u1900:
  1811                           	line	31
  1812                           ;Interupt.c: 30: {
  1813                           ;Interupt.c: 31: DELAY0 -=1;
  1814  0014CA  060D               	decf	((c:13)),c
  1815  0014CC  A0D8               	btfss	status,0
  1816  0014CE  060E               	decf	((c:13+1)),c
  1817                           	line	32
  1818                           	
  1819  0014D0                     i2l487:		; BSR set to: ?
  1820                           
  1821                           	line	33
  1822                           ;Interupt.c: 32: }
  1823                           ;Interupt.c: 33: RC6=!RC6;
  1824  0014D0  7C82               	btg	c:(31766/8),(31766)&7	;volatile
  1825                           	line	34
  1826                           ;Interupt.c: 34: TMR0IF = 0;
  1827  0014D2  94F2               	bcf	c:(32658/8),(32658)&7	;volatile
  1828                           	line	36
  1829                           	
  1830  0014D4                     i2l486:		; BSR set to: ?
  1831                           
  1832                           	line	37
  1833                           ;Interupt.c: 36: }
  1834                           ;Interupt.c: 37: }
  1835  0014D4                     i2l483:
  1836                           			; BSR set to: ?
  1837                           
  1838  0014D4  C121  FFF8         	movff	??_IntServe+12,tblptru+0
  1839  0014D8  C120  FFF7         	movff	??_IntServe+11,tblptrh+0
  1840  0014DC  C11F  FFF6         	movff	??_IntServe+10,tblptrl+0
  1841  0014E0  C11E  FFF4         	movff	??_IntServe+9,prodh+0
  1842  0014E4  C11D  FFF3         	movff	??_IntServe+8,prodl+0
  1843  0014E8  C11C  FFDA         	movff	??_IntServe+7,fsr2h+0
  1844  0014EC  C11B  FFD9         	movff	??_IntServe+6,fsr2l+0
  1845  0014F0  C11A  FFE2         	movff	??_IntServe+5,fsr1h+0
  1846  0014F4  C119  FFE1         	movff	??_IntServe+4,fsr1l+0
  1847  0014F8  C118  FFEA         	movff	??_IntServe+3,fsr0h+0
  1848  0014FC  C117  FFE9         	movff	??_IntServe+2,fsr0l+0
  1849  001500  C116  FFFB         	movff	??_IntServe+1,pclat+1
  1850  001504  C115  FFFA         	movff	??_IntServe+0,pclat+0
  1851  001508  0011               	retfie f
  1852                           	opt stack 0
  1853                           GLOBAL __end_of_IntServe
  1854  00150A                     	__end_of_IntServe:
  1855                           	FNSIZE	_IntServe,13,0
  1856                           ; =============== function _IntServe ends ======
                                 ======
  1857                           
  1858                           	signat	_IntServe,88
  1859                           	FNCALL	_main,_init
  1860                           	FNCALL	_main,_LCD_Move
  1861                           	FNCALL	_main,_A2D_Read
  1862                           	FNCALL	_main,_LCD_Out
  1863                           	FNCALL	_main,_LCD_Write
  1864                           	FNCALL	_LCD_Out,___lwmod
  1865                           	FNCALL	_LCD_Out,___lwdiv
  1866                           	FNCALL	_LCD_Out,_LCD_Write
  1867                           	FNCALL	_init,_LCD_Init
  1868                           	FNCALL	_init,_LCD_Move
  1869                           	FNCALL	_init,_LCD_Write
  1870                           	FNCALL	_LCD_Move,_LCD_Inst
  1871                           	FNCALL	_LCD_Write,_LCD_Strobe
  1872                           	FNCALL	_LCD_Init,_LCD_Inst
  1873                           	FNCALL	_LCD_Inst,_LCD_Strobe
  1874                           	FNCALL	_LCD_Inst,_Wait_ms
  1875                           	FNCALL	_LCD_Strobe,_LCD_Pause
  1876                           	FNROOT	_main
  1877                           	FNCALL	intlevel2,_IntServe
  1878                           	global	intlevel2
  1879                           	FNROOT	intlevel2
  1880                                   psect   smallconst,class=SMALLCONST,spac
                                 e=0,reloc=2
  1881  001000  00                 	db	0	;reserve
  1882                           	global	_MSG1
  1883                           	file	"E:\Users\brett\Projects\GitHub\SAE_Motor_
                                 Control\Trunk\DriveSignal.c"
  1884                           	line	18
  1885  001001                     _MSG1:
  1886  001001  4F                 	db	low(04Fh)
  1887  001002  46                 	db	low(046h)
  1888  001003  46                 	db	low(046h)
  1889  001004  20                 	db	low(020h)
  1890  001005  20                 	db	low(020h)
  1891  001006  20                 	db	low(020h)
  1892  001007  20                 	db	low(020h)
  1893  001008  20                 	db	low(020h)
  1894  001009  20                 	db	low(020h)
  1895  00100A  20                 	db	low(020h)
  1896  00100B  20                 	db	low(020h)
  1897  00100C  20                 	db	low(020h)
  1898  00100D  20                 	db	low(020h)
  1899  00100E  20                 	db	low(020h)
  1900  00100F  20                 	db	low(020h)
  1901  001010  20                 	db	low(020h)
  1902  001011  20                 	db	low(020h)
  1903  001012  20                 	db	low(020h)
  1904  001013  00                 	db	low(0)
  1905  001014  00                 	db   0
  1906                           	global	_MSG2
  1907                           	line	19
  1908  001015                     _MSG2:
  1909  001015  46                 	db	low(046h)
  1910  001016  55                 	db	low(055h)
  1911  001017  4C                 	db	low(04Ch)
  1912  001018  4C                 	db	low(04Ch)
  1913  001019  20                 	db	low(020h)
  1914  00101A  50                 	db	low(050h)
  1915  00101B  4F                 	db	low(04Fh)
  1916  00101C  57                 	db	low(057h)
  1917  00101D  45                 	db	low(045h)
  1918  00101E  52                 	db	low(052h)
  1919  00101F  20                 	db	low(020h)
  1920  001020  20                 	db	low(020h)
  1921  001021  20                 	db	low(020h)
  1922  001022  20                 	db	low(020h)
  1923  001023  20                 	db	low(020h)
  1924  001024  20                 	db	low(020h)
  1925  001025  20                 	db	low(020h)
  1926  001026  20                 	db	low(020h)
  1927  001027  00                 	db	low(0)
  1928  001028  00                 	db   0
  1929                           	global	_MSG3
  1930                           	line	20
  1931                           	global	_MSG3
  1932  001029                     _MSG3:
  1933  001029  4D                 	db	low(04Dh)
  1934  00102A  49                 	db	low(049h)
  1935  00102B  44                 	db	low(044h)
  1936  00102C  20                 	db	low(020h)
  1937  00102D  20                 	db	low(020h)
  1938  00102E  50                 	db	low(050h)
  1939  00102F  4F                 	db	low(04Fh)
  1940  001030  57                 	db	low(057h)
  1941  001031  45                 	db	low(045h)
  1942  001032  52                 	db	low(052h)
  1943  001033  20                 	db	low(020h)
  1944  001034  20                 	db	low(020h)
  1945  001035  20                 	db	low(020h)
  1946  001036  20                 	db	low(020h)
  1947  001037  20                 	db	low(020h)
  1948  001038  20                 	db	low(020h)
  1949  001039  20                 	db	low(020h)
  1950  00103A  20                 	db	low(020h)
  1951  00103B  00                 	db	low(0)
  1952  00103C  00                 	db   0
  1953                           	global	_MSG4
  1954                           	line	21
  1955                           	global	_MSG4
  1956  00103D                     _MSG4:
  1957  00103D  4C                 	db	low(04Ch)
  1958  00103E  4F                 	db	low(04Fh)
  1959  00103F  57                 	db	low(057h)
  1960  001040  20                 	db	low(020h)
  1961  001041  20                 	db	low(020h)
  1962  001042  50                 	db	low(050h)
  1963  001043  4F                 	db	low(04Fh)
  1964  001044  57                 	db	low(057h)
  1965  001045  45                 	db	low(045h)
  1966  001046  52                 	db	low(052h)
  1967  001047  20                 	db	low(020h)
  1968  001048  20                 	db	low(020h)
  1969  001049  20                 	db	low(020h)
  1970  00104A  20                 	db	low(020h)
  1971  00104B  20                 	db	low(020h)
  1972  00104C  20                 	db	low(020h)
  1973  00104D  20                 	db	low(020h)
  1974  00104E  20                 	db	low(020h)
  1975  00104F  00                 	db	low(0)
  1976  001050  00                 	db   0
  1977                           	global	_MSG5
  1978                           	line	22
  1979                           	global	_MSG5
  1980  001051                     _MSG5:
  1981  001051  56                 	db	low(056h)
  1982  001052  45                 	db	low(045h)
  1983  001053  52                 	db	low(052h)
  1984  001054  59                 	db	low(059h)
  1985  001055  20                 	db	low(020h)
  1986  001056  46                 	db	low(046h)
  1987  001057  41                 	db	low(041h)
  1988  001058  53                 	db	low(053h)
  1989  001059  54                 	db	low(054h)
  1990  00105A  20                 	db	low(020h)
  1991  00105B  20                 	db	low(020h)
  1992  00105C  20                 	db	low(020h)
  1993  00105D  20                 	db	low(020h)
  1994  00105E  20                 	db	low(020h)
  1995  00105F  20                 	db	low(020h)
  1996  001060  20                 	db	low(020h)
  1997  001061  20                 	db	low(020h)
  1998  001062  20                 	db	low(020h)
  1999  001063  00                 	db	low(0)
  2000  001064  00                 	db   0
  2001                           	global	_MSG6
  2002                           	line	23
  2003                           	global	_MSG6
  2004  001065                     _MSG6:
  2005  001065  46                 	db	low(046h)
  2006  001066  41                 	db	low(041h)
  2007  001067  53                 	db	low(053h)
  2008  001068  54                 	db	low(054h)
  2009  001069  20                 	db	low(020h)
  2010  00106A  20                 	db	low(020h)
  2011  00106B  20                 	db	low(020h)
  2012  00106C  20                 	db	low(020h)
  2013  00106D  20                 	db	low(020h)
  2014  00106E  20                 	db	low(020h)
  2015  00106F  20                 	db	low(020h)
  2016  001070  20                 	db	low(020h)
  2017  001071  20                 	db	low(020h)
  2018  001072  20                 	db	low(020h)
  2019  001073  20                 	db	low(020h)
  2020  001074  20                 	db	low(020h)
  2021  001075  20                 	db	low(020h)
  2022  001076  20                 	db	low(020h)
  2023  001077  00                 	db	low(0)
  2024  001078  00                 	db   0
  2025                           	global	_MSG7
  2026                           	line	24
  2027  001079                     _MSG7:
  2028  001079  53                 	db	low(053h)
  2029  00107A  4C                 	db	low(04Ch)
  2030  00107B  4F                 	db	low(04Fh)
  2031  00107C  57                 	db	low(057h)
  2032  00107D  20                 	db	low(020h)
  2033  00107E  20                 	db	low(020h)
  2034  00107F  20                 	db	low(020h)
  2035  001080  20                 	db	low(020h)
  2036  001081  20                 	db	low(020h)
  2037  001082  20                 	db	low(020h)
  2038  001083  20                 	db	low(020h)
  2039  001084  20                 	db	low(020h)
  2040  001085  20                 	db	low(020h)
  2041  001086  20                 	db	low(020h)
  2042  001087  20                 	db	low(020h)
  2043  001088  20                 	db	low(020h)
  2044  001089  20                 	db	low(020h)
  2045  00108A  20                 	db	low(020h)
  2046  00108B  00                 	db	low(0)
  2047  00108C  00                 	db   0
  2048                           	global	_MSG1
  2049                           	global	_MSG2
  2050                           	global	_MSG3
  2051                           	global	_MSG4
  2052                           	global	_MSG5
  2053                           	global	_MSG6
  2054                           	global	_MSG7
  2055                           	global	_A2D
  2056                           	global	_A2D
  2057  000000                     _A2D  equ     11
  2058                           
  2059                           	DABS	1,11,2	;_A2D
  2060                           	global	_DELAY
  2061                           	global	_DELAY
  2062  000000                     _DELAY  equ     9
  2063                           
  2064                           	DABS	1,9,2	;_DELAY
  2065                           	global	_DELAY0
  2066                           	global	_DELAY0
  2067  000000                     _DELAY0  equ     13
  2068                           
  2069                           	DABS	1,13,2	;_DELAY0
  2070                           	global	_bump
  2071                           	global	_bump
  2072  000000                     _bump  equ     17
  2073                           
  2074                           	DABS	1,17,2	;_bump
  2075                           	global	_gas
  2076                           	global	_gas
  2077  000000                     _gas  equ     15
  2078                           
  2079                           	DABS	1,15,2	;_gas
  2080                           	global	_lit
  2081                           	global	_lit
  2082  000000                     _lit  equ     2
  2083                           
  2084                           	DABS	1,2,2	;_lit
  2085                           	global	_on
  2086                           	global	_on
  2087  000000                     _on  equ     0
  2088                           
  2089                           	DABS	1,0,2	;_on
  2090                           	global	_pump
  2091                           	global	_pump
  2092  000000                     _pump  equ     4
  2093                           
  2094                           	DABS	1,4,2	;_pump
  2095                           	global	_time
  2096                           	global	_time
  2097  000000                     _time  equ     7
  2098                           
  2099                           	DABS	1,7,2	;_time
  2100                           	global	_i
  2101                           	global	_i
  2102  000000                     _i  equ     6
  2103                           
  2104                           	DABS	1,6,1	;_i
  2105                           	global	_ADRES
  2106  000000                     _ADRES	equ	0xFC3
  2107                           	global	_TMR0
  2108  000000                     _TMR0	equ	0xFD6
  2109                           	global	_ADCON0
  2110  000000                     _ADCON0	equ	0xFC2
  2111                           	global	_ADCON1
  2112  000000                     _ADCON1	equ	0xFC1
  2113                           	global	_ADCON2
  2114  000000                     _ADCON2	equ	0xFC0
  2115                           	global	_PORTC
  2116  000000                     _PORTC	equ	0xF82
  2117                           	global	_PORTD
  2118  000000                     _PORTD	equ	0xF83
  2119                           	global	_PR2
  2120  000000                     _PR2	equ	0xFCB
  2121                           	global	_T0CON
  2122  000000                     _T0CON	equ	0xFD5
  2123                           	global	_T2CON
  2124  000000                     _T2CON	equ	0xFCA
  2125                           	global	_TRISA
  2126  000000                     _TRISA	equ	0xF92
  2127                           	global	_TRISB
  2128  000000                     _TRISB	equ	0xF93
  2129                           	global	_TRISC
  2130  000000                     _TRISC	equ	0xF94
  2131                           	global	_TRISD
  2132  000000                     _TRISD	equ	0xF95
  2133                           	global	_TRISE
  2134  000000                     _TRISE	equ	0xF96
  2135                           	global	_GIE
  2136  000000                     _GIE	equ	0x7F97
  2137                           	global	_GODONE
  2138  000000                     _GODONE	equ	0x7E11
  2139                           	global	_PEIE
  2140  000000                     _PEIE	equ	0x7F96
  2141                           	global	_RA3
  2142  000000                     _RA3	equ	0x7C03
  2143                           	global	_RB0
  2144  000000                     _RB0	equ	0x7C08
  2145                           	global	_RB1
  2146  000000                     _RB1	equ	0x7C09
  2147                           	global	_RC1
  2148  000000                     _RC1	equ	0x7C11
  2149                           	global	_RC6
  2150  000000                     _RC6	equ	0x7C16
  2151                           	global	_RC7
  2152  000000                     _RC7	equ	0x7C17
  2153                           	global	_RD1
  2154  000000                     _RD1	equ	0x7C19
  2155                           	global	_RD2
  2156  000000                     _RD2	equ	0x7C1A
  2157                           	global	_RD3
  2158  000000                     _RD3	equ	0x7C1B
  2159                           	global	_T0CS
  2160  000000                     _T0CS	equ	0x7EAD
  2161                           	global	_TMR0IE
  2162  000000                     _TMR0IE	equ	0x7F95
  2163                           	global	_TMR0IF
  2164  000000                     _TMR0IF	equ	0x7F92
  2165                           	global	_TMR0IP
  2166  000000                     _TMR0IP	equ	0x7F8A
  2167                           	global	_TMR0ON
  2168  000000                     _TMR0ON	equ	0x7EAF
  2169                           	global	_TMR2IE
  2170  000000                     _TMR2IE	equ	0x7CE9
  2171                           	global	_TMR2IF
  2172  000000                     _TMR2IF	equ	0x7CF1
  2173                           	global	_TMR2IP
  2174  000000                     _TMR2IP	equ	0x7CF9
  2175                           	global	_TMR2ON
  2176  000000                     _TMR2ON	equ	0x7E52
  2177  00108D  00                 	db 0	; dummy byte at the end
  2178                           	psect	intsave_regs,class=BIGRAM,space=1
  2179                           	PSECT	param1,class=BANK1,space=1
  2180                           	GLOBAL	__Lparam1
  2181                           	FNCONF	param1,??,?
  2182                           	GLOBAL	__Labsbss0
  2183  000000                     __Labsbss0	EQU	0
  2184                           	GLOBAL	__Habsbss0
  2185  000000                     __Habsbss0	EQU	19
  2186                           GLOBAL	__Lparam, __Hparam
  2187                           GLOBAL	__Lparam1, __Hparam1
  2188  000000                     __Lparam	EQU	__Lparam1
  2189  000000                     __Hparam	EQU	__Hparam1


HI-TECH Software PICC-18 Macro Assembler V9.63PL3 build 4692 
Symbol Table                                           Sat Oct 06 14:28:01 2018

                  _i 000006                   _on 000000  
        ?_LCD_Strobe 010F                  _A2D 00000B  
                l110 143A                  l111 1464  
                l121 11F4                  l122 11BE  
                l114 11F4                  l123 11F4  
                l115 1092                  l109 1464  
                l117 1172                  l118 113C  
                l119 1172                  l240 17E2  
                l232 1722                  l241 17CE  
                l233 16B6                  l242 17E2  
                l234 1722                  l250 1624  
                l251 17AC                  l236 1702  
                l244 1812                  l252 16A4  
                l260 12CA                  l237 16DC  
                l245 1770                  l253 1306  
                l238 16FA                  l246 1624  
                l254 121A                  l247 15C0  
                l255 1286                  l248 15E0  
                l249 1602                  l257 12A4  
                l258 1306                  l371 17FE  
                l372 17EC                  l374 17F4  
                l800 1338                  l801 1356  
                l810 154A                  l803 13B4  
                l812 1596                  l804 1356  
                l813 154A                  l805 13A0  
                l806 15A0                  l814 1582  
                l807 1596                  l808 153E  
                l809 152C                  l797 13BE  
                l798 13B4                  l799 134A  
                _GIE 007F97                  _RB0 007C08  
                _RB1 007C09                  _RA3 007C03  
                _RC1 007C11                  _RD1 007C19  
                _RD2 007C1A                  _RD3 007C1B  
                _RC6 007C16                  _RC7 007C17  
                _PR2 000FCB                  _gas 00000F  
                _lit 000002     __end_of_A2D_Read 1800  
    __end_of_LCD_Out 1308                 _T0CS 007EAD  
               u1700 117A                 u1701 1178  
               u1710 11BC                 u1711 11BA  
               u1800 15F0                 u1720 11F4  
               u1801 15EE                 u1721 11F2  
               u1810 1612                 u1650 1438  
               u1730 1218                 u1811 1610  
               u1651 1436                 u1731 1216  
               u1820 16DA                 u1660 1464  
               u1740 1286                 u1821 16D8  
               u1661 1462                 u1741 1284  
               u1830 16FA                 u1910 17F4  
               u1750 12A2                 u1670 10F8  
               u1831 16F8                 u1911 17F2  
               u1751 12A0                 u1671 10F6  
               u1840 1722                 u1920 1326  
               u1760 12B6                 u1680 113A  
               u1841 1720                 u1921 1324  
               u1761 12B4                 u1681 1138  
               u1850 17CC                 u1930 1356  
               u1770 1306                 u1690 1172  
               u1851 17CA                 u1931 1354  
               u1771 1304                 u1691 1170  
               u1860 17E2                 u1940 1382  
               u1780 15AE                 u1861 17E0  
               u1941 1380                 u1781 15AC  
               u1950 151A                 u1790 15CE  
               u1951 1518                 u1791 15CC  
               u1960 154A                 u1961 1548  
               u1970 156A                 _PEIE 007F96  
               u1971 1568                 _MSG1 1001  
               _MSG2 1015                 _MSG3 1029  
               _MSG4 103D                 _MSG5 1051  
               _MSG6 1065                 _MSG7 1079  
               _TMR0 000FD6                 _main 108E  
               _bump 000011                 _init 13C0  
               _time 000007                 fsr0h 000FEA  
               fsr1h 000FE2                 indf0 000FEF  
               fsr0l 000FE9                 fsr2h 000FDA  
               _pump 000004                 fsr1l 000FE1  
               fsr2l 000FD9                 pclat 000FFA  
               prodh 000FF4                 prodl 000FF3  
               start 0818          LCD_Out@DATA 0103  
        LCD_Move@Col 0106          LCD_Move@Row 0105  
   __end_of_LCD_Init 16A6     __end_of_LCD_Inst 1772  
   __end_of_LCD_Move 1626      __end_of_Wait_ms 1724  
              ?_main 0100                ?_init 0103  
              _ADRES 000FC3                _DELAY 000009  
              _T0CON 000FD5                _T2CON 000FCA  
    __end_of___lwdiv 13C0      __end_of___lwmod 15A2  
              i2l483 14D4                i2l484 14AE  
              i2l485 14AA                i2l486 14D4  
              i2l487 14D0                _PORTC 000F82  
              _PORTD 000F83                _TRISA 000F92  
              _TRISB 000F93                _TRISC 000F94  
              _TRISD 000F95                _TRISE 000F96  
              main@i 0100                tablat 000FF5  
              status 000FD8         __end_of_main 11FA  
       __end_of_init 1466     __end_of_IntServe 150A  
             ??_main 0100               ??_init 0103  
      __activetblptr 000003    __end_of_LCD_Pause 17E4  
          ??_LCD_Out 0106    __end_of_LCD_Write 17AE  
             _ADCON0 000FC2               _ADCON1 000FC1  
             _ADCON2 000FC0               _DELAY0 00000D  
             _GODONE 007E11               i2u1900 14CA  
             i2u1901 14C8               i2u1870 1498  
             i2u1871 1496               i2u1880 14A4  
             i2u1881 14A2               i2u1890 14B6  
             i2u1891 14B4               _TMR0IE 007F95  
             _TMR0IF 007F92               _TMR2IE 007CE9  
             _TMR2IF 007CF1               _TMR0IP 007F8A  
             _TMR2IP 007CF9               _TMR0ON 007EAF  
             _TMR2ON 007E52               __Ldata 000000  
          ??_Wait_ms 010B            ??___lwdiv 0111  
          ??___lwmod 0111            ?_A2D_Read 0103  
       __mediumconst 108E               tblptrh 000FF7  
             tblptrl 000FF6               tblptru 000FF8  
         __accesstop 0080            ?_LCD_Init 0105  
          ?_LCD_Inst 0107            ?_LCD_Move 0105  
          LCD_Inst@c 0107           ??_A2D_Read 0105  
       ??_LCD_Strobe 010F            ?_IntServe 0115  
         ??_LCD_Init 0105           ??_LCD_Inst 0108  
         ??_LCD_Move 0107   __end_of_LCD_Strobe 1814  
            _LCD_Out 11FA           ??_IntServe 0115  
            __Hparam 0122              __Lparam 0100  
            _Wait_ms 16A6              ___lwdiv 1308  
            ___lwmod 150A              __ramtop 1000  
          _LCD_Pause 17AE            _LCD_Write 1772  
      __Lmediumconst 108E              int_func 0808  
         ?_LCD_Pause 010F           ?_LCD_Write 010D  
         LCD_Pause@x 010F           LCD_Write@c 010D  
          __Habsbss0 000013            __Labsbss0 000000  
           ?_LCD_Out 0103             LCD_Out@A 0107  
           LCD_Out@N 0105             LCD_Out@i 0106  
        ??_LCD_Pause 010F          ??_LCD_Write 010E  
   ___lwdiv@dividend 010D             ?_Wait_ms 0109  
           ?___lwdiv 010D             ?___lwmod 010D  
           _A2D_Read 17E4          __smallconst 1000  
   ___lwdiv@quotient 0112             _LCD_Init 1626  
           _LCD_Inst 1724             _LCD_Move 15A2  
           _IntServe 1466             __Hparam1 0122  
           __Lparam1 0100             Wait_ms@X 0109  
           Wait_ms@i 010B             Wait_ms@j 010D  
       __Lsmallconst 1000      ___lwdiv@divisor 010F  
    ___lwdiv@counter 0111           _LCD_Strobe 1800  
           intlevel2 1814     ___lwmod@dividend 010D  
    ___lwmod@divisor 010F      ___lwmod@counter 0111  
